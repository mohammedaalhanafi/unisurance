{
	"id": "51924a467c68e5fc83f1d85dac92640f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mocks/MockYieldStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IYieldStrategy.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract MockYieldStrategy is IYieldStrategy {\n    using SafeERC20 for IERC20;\n    \n    IERC20 public immutable token;\n    uint256 public apy = 500; // 5% APY (with 2 decimals)\n    mapping(address => uint256) public deposits;\n    mapping(address => uint256) public depositTime;\n    \n    constructor(address _token) {\n        token = IERC20(_token);\n    }\n    \n    function deposit(uint256 amount) external override returns (bool) {\n        token.safeTransferFrom(msg.sender, address(this), amount);\n        deposits[msg.sender] += amount;\n        if (depositTime[msg.sender] == 0) {\n            depositTime[msg.sender] = block.timestamp;\n        }\n        return true;\n    }\n    \n    function withdraw(uint256 amount) external override returns (uint256) {\n        require(deposits[msg.sender] >= amount, \"Insufficient balance\");\n        deposits[msg.sender] -= amount;\n        token.safeTransfer(msg.sender, amount);\n        return amount;\n    }\n    \n    function getYield(address user) external view override returns (uint256) {\n        if (depositTime[user] == 0) return 0;\n        \n        uint256 timeElapsed = block.timestamp - depositTime[user];\n        uint256 secondsInYear = 365 days;\n        \n        // Calculate yield: principal * rate * time\n        return (deposits[user] * apy * timeElapsed) / (secondsInYear * 10000);\n    }\n    \n    function getCurrentAPY() external view override returns (uint256) {\n        return apy;\n    }\n    \n    // Admin function to set APY (for testing)\n    function setAPY(uint256 _apy) external {\n        apy = _apy;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"contracts/interfaces/IYieldStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IYieldStrategy {\n    function deposit(uint256 amount) external returns (bool);\n    function withdraw(uint256 amount) external returns (uint256);\n    function getYield(address user) external view returns (uint256);\n    function getCurrentAPY() external view returns (uint256);\n}"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220808e6dc20eca46fd35397d7e548c07c651db20ea298561d44cb991af210bf6a264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220808e6dc20eca46fd35397d7e548c07c651db20ea298561d44cb991af210bf6a264736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP15 PUSH14 0xC20ECA46FD35397D7E548C07C651 0xDB KECCAK256 0xEA 0x29 DUP6 PUSH2 0xD44C 0xB9 SWAP2 0xAF 0x21 SIGNEXTEND 0xF6 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:8692:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220808e6dc20eca46fd35397d7e548c07c651db20ea298561d44cb991af210bf6a264736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 DUP15 PUSH14 0xC20ECA46FD35397D7E548C07C651 0xDB KECCAK256 0xEA 0x29 DUP6 PUSH2 0xD44C 0xB9 SWAP2 0xAF 0x21 SIGNEXTEND 0xF6 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:8692:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220808e6dc20eca46fd35397d7e548c07c651db20ea298561d44cb991af210bf6a264736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IYieldStrategy.sol",
								"contracts/mocks/MockYieldStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IYieldStrategy.sol": {
				"IYieldStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getYield",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256)": "b6b55f25",
							"getCurrentAPY()": "962ca496",
							"getYield(address)": "64c33977",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IYieldStrategy.sol\":\"IYieldStrategy\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IYieldStrategy.sol\":{\"keccak256\":\"0x0265590cd1af1d52ca653c40affe7b437fe3a21f27b0c99f05c5a0282f72510d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e30cb6f996ace8ee88198708d80b87199c71c43cb2e07f4046e6aed5cf29c7f\",\"dweb:/ipfs/QmYLNebyuBWPmUdz9tmkVZKFFTUXFXufW3B9BSwdqesF38\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mocks/MockYieldStrategy.sol": {
				"MockYieldStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "apy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getYield",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apy",
									"type": "uint256"
								}
							],
							"name": "setAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mocks/MockYieldStrategy.sol\":224:1791  contract MockYieldStrategy is IYieldStrategy {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/mocks/MockYieldStrategy.sol\":368:371  500 */\n  0x01f4\n    /* \"contracts/mocks/MockYieldStrategy.sol\":347:371  uint256 public apy = 500 */\n  0x00\n  sstore\n    /* \"contracts/mocks/MockYieldStrategy.sol\":511:578  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/mocks/MockYieldStrategy.sol\":564:570  _token */\n  dup1\n    /* \"contracts/mocks/MockYieldStrategy.sol\":549:571  token = IERC20(_token) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/mocks/MockYieldStrategy.sol\":511:578  constructor(address _token) {... */\n  pop\n    /* \"contracts/mocks/MockYieldStrategy.sol\":224:1791  contract MockYieldStrategy is IYieldStrategy {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/mocks/MockYieldStrategy.sol\":224:1791  contract MockYieldStrategy is IYieldStrategy {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7e11962f85eb7ceb5b38e296d507e5039b360e5ad6815220a68768366dc10fdd\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/mocks/MockYieldStrategy.sol\":224:1791  contract MockYieldStrategy is IYieldStrategy {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64c33977\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x64c33977\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x962ca496\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfc7e286d\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x24f45e67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3bcfc4b8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x46c64873\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1723:1789  function setAPY(uint256 _apy) external {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":908:1169  function withdraw(uint256 amount) external override returns (uint256) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/MockYieldStrategy.sol\":347:371  uint256 public apy = 500 */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/MockYieldStrategy.sol\":454:500  mapping(address => uint256) public depositTime */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1179:1563  function getYield(address user) external view override returns (uint256) {... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1573:1666  function getCurrentAPY() external view override returns (uint256) {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/MockYieldStrategy.sol\":588:898  function deposit(uint256 amount) external override returns (bool) {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/MockYieldStrategy.sol\":312:341  IERC20 public immutable token */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/MockYieldStrategy.sol\":405:448  mapping(address => uint256) public deposits */\n    tag_11:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1723:1789  function setAPY(uint256 _apy) external {... */\n    tag_16:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1778:1782  _apy */\n      dup1\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1772:1775  apy */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1772:1782  apy = _apy */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1723:1789  function setAPY(uint256 _apy) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/mocks/MockYieldStrategy.sol\":908:1169  function withdraw(uint256 amount) external override returns (uint256) {... */\n    tag_19:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":969:976  uint256 */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1020:1026  amount */\n      dup2\n        /* \"contracts/mocks/MockYieldStrategy.sol\":996:1004  deposits */\n      0x01\n        /* \"contracts/mocks/MockYieldStrategy.sol\":996:1016  deposits[msg.sender] */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1005:1015  msg.sender */\n      caller\n        /* \"contracts/mocks/MockYieldStrategy.sol\":996:1016  deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mocks/MockYieldStrategy.sol\":996:1026  deposits[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/mocks/MockYieldStrategy.sol\":988:1051  require(deposits[msg.sender] >= amount, \"Insufficient balance\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1085:1091  amount */\n      dup2\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1061:1069  deposits */\n      0x01\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1061:1081  deposits[msg.sender] */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1070:1080  msg.sender */\n      caller\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1061:1081  deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1061:1091  deposits[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1101:1139  token.safeTransfer(msg.sender, amount) */\n      tag_57\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1120:1130  msg.sender */\n      caller\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1132:1138  amount */\n      dup4\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1101:1106  token */\n      immutable(\"0x7e11962f85eb7ceb5b38e296d507e5039b360e5ad6815220a68768366dc10fdd\")\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1101:1119  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_58\n      swap1\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1101:1139  token.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_57:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1156:1162  amount */\n      dup2\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1149:1162  return amount */\n      swap1\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":908:1169  function withdraw(uint256 amount) external override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/mocks/MockYieldStrategy.sol\":347:371  uint256 public apy = 500 */\n    tag_23:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/mocks/MockYieldStrategy.sol\":454:500  mapping(address => uint256) public depositTime */\n    tag_28:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1179:1563  function getYield(address user) external view override returns (uint256) {... */\n    tag_32:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1243:1250  uint256 */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1287:1288  0 */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1266:1277  depositTime */\n      0x02\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1266:1283  depositTime[user] */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1278:1282  user */\n      dup5\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1266:1283  depositTime[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1266:1288  depositTime[user] == 0 */\n      sub\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1262:1298  if (depositTime[user] == 0) return 0 */\n      tag_60\n      jumpi\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1297:1298  0 */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1290:1298  return 0 */\n      swap1\n      pop\n      jump(tag_59)\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1262:1298  if (depositTime[user] == 0) return 0 */\n    tag_60:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1317:1336  uint256 timeElapsed */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1357:1368  depositTime */\n      0x02\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1357:1374  depositTime[user] */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1369:1373  user */\n      dup5\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1357:1374  depositTime[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1339:1354  block.timestamp */\n      timestamp\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1339:1374  block.timestamp - depositTime[user] */\n      tag_61\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_61:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1317:1374  uint256 timeElapsed = block.timestamp - depositTime[user] */\n      swap1\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1384:1405  uint256 secondsInYear */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1408:1416  365 days */\n      0x01e13380\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1384:1416  uint256 secondsInYear = 365 days */\n      swap1\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1550:1555  10000 */\n      0x2710\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1534:1547  secondsInYear */\n      dup2\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1534:1555  secondsInYear * 10000 */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1518:1529  timeElapsed */\n      dup3\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1512:1515  apy */\n      sload(0x00)\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1495:1503  deposits */\n      0x01\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1495:1509  deposits[user] */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1504:1508  user */\n      dup9\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1495:1509  deposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1495:1515  deposits[user] * apy */\n      tag_64\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1495:1529  deposits[user] * apy * timeElapsed */\n      tag_65\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_65:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1494:1556  (deposits[user] * apy * timeElapsed) / (secondsInYear * 10000) */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1487:1556  return (deposits[user] * apy * timeElapsed) / (secondsInYear * 10000) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1179:1563  function getYield(address user) external view override returns (uint256) {... */\n    tag_59:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1573:1666  function getCurrentAPY() external view override returns (uint256) {... */\n    tag_35:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1630:1637  uint256 */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1656:1659  apy */\n      sload(0x00)\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1649:1659  return apy */\n      swap1\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":1573:1666  function getCurrentAPY() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/mocks/MockYieldStrategy.sol\":588:898  function deposit(uint256 amount) external override returns (bool) {... */\n    tag_39:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":648:652  bool */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":664:721  token.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_70\n        /* \"contracts/mocks/MockYieldStrategy.sol\":687:697  msg.sender */\n      caller\n        /* \"contracts/mocks/MockYieldStrategy.sol\":707:711  this */\n      address\n        /* \"contracts/mocks/MockYieldStrategy.sol\":714:720  amount */\n      dup5\n        /* \"contracts/mocks/MockYieldStrategy.sol\":664:669  token */\n      immutable(\"0x7e11962f85eb7ceb5b38e296d507e5039b360e5ad6815220a68768366dc10fdd\")\n        /* \"contracts/mocks/MockYieldStrategy.sol\":664:686  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_71\n      swap1\n        /* \"contracts/mocks/MockYieldStrategy.sol\":664:721  token.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":755:761  amount */\n      dup2\n        /* \"contracts/mocks/MockYieldStrategy.sol\":731:739  deposits */\n      0x01\n        /* \"contracts/mocks/MockYieldStrategy.sol\":731:751  deposits[msg.sender] */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":740:750  msg.sender */\n      caller\n        /* \"contracts/mocks/MockYieldStrategy.sol\":731:751  deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":731:761  deposits[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":802:803  0 */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":775:786  depositTime */\n      0x02\n        /* \"contracts/mocks/MockYieldStrategy.sol\":775:798  depositTime[msg.sender] */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":787:797  msg.sender */\n      caller\n        /* \"contracts/mocks/MockYieldStrategy.sol\":775:798  depositTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mocks/MockYieldStrategy.sol\":775:803  depositTime[msg.sender] == 0 */\n      sub\n        /* \"contracts/mocks/MockYieldStrategy.sol\":771:871  if (depositTime[msg.sender] == 0) {... */\n      tag_74\n      jumpi\n        /* \"contracts/mocks/MockYieldStrategy.sol\":845:860  block.timestamp */\n      timestamp\n        /* \"contracts/mocks/MockYieldStrategy.sol\":819:830  depositTime */\n      0x02\n        /* \"contracts/mocks/MockYieldStrategy.sol\":819:842  depositTime[msg.sender] */\n      0x00\n        /* \"contracts/mocks/MockYieldStrategy.sol\":831:841  msg.sender */\n      caller\n        /* \"contracts/mocks/MockYieldStrategy.sol\":819:842  depositTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/mocks/MockYieldStrategy.sol\":819:860  depositTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":771:871  if (depositTime[msg.sender] == 0) {... */\n    tag_74:\n        /* \"contracts/mocks/MockYieldStrategy.sol\":887:891  true */\n      0x01\n        /* \"contracts/mocks/MockYieldStrategy.sol\":880:891  return true */\n      swap1\n      pop\n        /* \"contracts/mocks/MockYieldStrategy.sol\":588:898  function deposit(uint256 amount) external override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/mocks/MockYieldStrategy.sol\":312:341  IERC20 public immutable token */\n    tag_43:\n      immutable(\"0x7e11962f85eb7ceb5b38e296d507e5039b360e5ad6815220a68768366dc10fdd\")\n      dup2\n      jump\t// out\n        /* \"contracts/mocks/MockYieldStrategy.sol\":405:448  mapping(address => uint256) public deposits */\n    tag_48:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_77\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_82\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_86\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_87)\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_92:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_94:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_95:\n        /* \"#utility.yul\":490:514   */\n      tag_121\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_94\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_122:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_96:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_124\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_95\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_15:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_127\n      tag_92\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":766:885   */\n    tag_126:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_128\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_96\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_97:\n        /* \"#utility.yul\":1112:1136   */\n      tag_130\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_94\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_21:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_132\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_97\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_98:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_99:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_135\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_98\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_100:\n        /* \"#utility.yul\":1684:1708   */\n      tag_137\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_99\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_138:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_101:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_140\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_100\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_27:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_143\n      tag_92\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1960:2079   */\n    tag_142:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_144\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_101\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2309   */\n    tag_102:\n        /* \"#utility.yul\":2253:2260   */\n      0x00\n        /* \"#utility.yul\":2296:2301   */\n      dup2\n        /* \"#utility.yul\":2289:2302   */\n      iszero\n        /* \"#utility.yul\":2282:2303   */\n      iszero\n        /* \"#utility.yul\":2271:2303   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2424   */\n    tag_103:\n        /* \"#utility.yul\":2396:2417   */\n      tag_147\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2396:2417   */\n      tag_102\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2391:2394   */\n      dup3\n        /* \"#utility.yul\":2384:2418   */\n      mstore\n        /* \"#utility.yul\":2315:2424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2430:2640   */\n    tag_41:\n        /* \"#utility.yul\":2517:2521   */\n      0x00\n        /* \"#utility.yul\":2555:2557   */\n      0x20\n        /* \"#utility.yul\":2544:2553   */\n      dup3\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"#utility.yul\":2532:2558   */\n      swap1\n      pop\n        /* \"#utility.yul\":2568:2633   */\n      tag_149\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2619:2628   */\n      dup4\n        /* \"#utility.yul\":2615:2632   */\n      add\n        /* \"#utility.yul\":2606:2612   */\n      dup5\n        /* \"#utility.yul\":2568:2633   */\n      tag_103\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2430:2640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:2706   */\n    tag_104:\n        /* \"#utility.yul\":2674:2677   */\n      0x00\n        /* \"#utility.yul\":2695:2700   */\n      dup2\n        /* \"#utility.yul\":2688:2700   */\n      swap1\n      pop\n        /* \"#utility.yul\":2646:2706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2712:2854   */\n    tag_105:\n        /* \"#utility.yul\":2762:2771   */\n      0x00\n        /* \"#utility.yul\":2795:2848   */\n      tag_152\n        /* \"#utility.yul\":2813:2847   */\n      tag_153\n        /* \"#utility.yul\":2822:2846   */\n      tag_154\n        /* \"#utility.yul\":2840:2845   */\n      dup5\n        /* \"#utility.yul\":2822:2846   */\n      tag_98\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2813:2847   */\n      tag_104\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2795:2848   */\n      tag_98\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2782:2848   */\n      swap1\n      pop\n        /* \"#utility.yul\":2712:2854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_106:\n        /* \"#utility.yul\":2910:2919   */\n      0x00\n        /* \"#utility.yul\":2943:2980   */\n      tag_156\n        /* \"#utility.yul\":2974:2979   */\n      dup3\n        /* \"#utility.yul\":2943:2980   */\n      tag_105\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2930:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3132   */\n    tag_107:\n        /* \"#utility.yul\":3056:3065   */\n      0x00\n        /* \"#utility.yul\":3089:3126   */\n      tag_158\n        /* \"#utility.yul\":3120:3125   */\n      dup3\n        /* \"#utility.yul\":3089:3126   */\n      tag_106\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3076:3126   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3138:3297   */\n    tag_108:\n        /* \"#utility.yul\":3239:3290   */\n      tag_160\n        /* \"#utility.yul\":3284:3289   */\n      dup2\n        /* \"#utility.yul\":3239:3290   */\n      tag_107\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3234:3237   */\n      dup3\n        /* \"#utility.yul\":3227:3291   */\n      mstore\n        /* \"#utility.yul\":3138:3297   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3303:3553   */\n    tag_45:\n        /* \"#utility.yul\":3410:3414   */\n      0x00\n        /* \"#utility.yul\":3448:3450   */\n      0x20\n        /* \"#utility.yul\":3437:3446   */\n      dup3\n        /* \"#utility.yul\":3433:3451   */\n      add\n        /* \"#utility.yul\":3425:3451   */\n      swap1\n      pop\n        /* \"#utility.yul\":3461:3546   */\n      tag_162\n        /* \"#utility.yul\":3543:3544   */\n      0x00\n        /* \"#utility.yul\":3532:3541   */\n      dup4\n        /* \"#utility.yul\":3528:3545   */\n      add\n        /* \"#utility.yul\":3519:3525   */\n      dup5\n        /* \"#utility.yul\":3461:3546   */\n      tag_108\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3303:3553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3559:3728   */\n    tag_109:\n        /* \"#utility.yul\":3643:3654   */\n      0x00\n        /* \"#utility.yul\":3677:3683   */\n      dup3\n        /* \"#utility.yul\":3672:3675   */\n      dup3\n        /* \"#utility.yul\":3665:3684   */\n      mstore\n        /* \"#utility.yul\":3717:3721   */\n      0x20\n        /* \"#utility.yul\":3712:3715   */\n      dup3\n        /* \"#utility.yul\":3708:3722   */\n      add\n        /* \"#utility.yul\":3693:3722   */\n      swap1\n      pop\n        /* \"#utility.yul\":3559:3728   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3734:3904   */\n    tag_110:\n        /* \"#utility.yul\":3874:3896   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":3870:3871   */\n      0x00\n        /* \"#utility.yul\":3862:3868   */\n      dup3\n        /* \"#utility.yul\":3858:3872   */\n      add\n        /* \"#utility.yul\":3851:3897   */\n      mstore\n        /* \"#utility.yul\":3734:3904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3910:4276   */\n    tag_111:\n        /* \"#utility.yul\":4052:4055   */\n      0x00\n        /* \"#utility.yul\":4073:4140   */\n      tag_166\n        /* \"#utility.yul\":4137:4139   */\n      0x14\n        /* \"#utility.yul\":4132:4135   */\n      dup4\n        /* \"#utility.yul\":4073:4140   */\n      tag_109\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4066:4140   */\n      swap2\n      pop\n        /* \"#utility.yul\":4149:4242   */\n      tag_167\n        /* \"#utility.yul\":4238:4241   */\n      dup3\n        /* \"#utility.yul\":4149:4242   */\n      tag_110\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4267:4269   */\n      0x20\n        /* \"#utility.yul\":4262:4265   */\n      dup3\n        /* \"#utility.yul\":4258:4270   */\n      add\n        /* \"#utility.yul\":4251:4270   */\n      swap1\n      pop\n        /* \"#utility.yul\":3910:4276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4282:4701   */\n    tag_54:\n        /* \"#utility.yul\":4448:4452   */\n      0x00\n        /* \"#utility.yul\":4486:4488   */\n      0x20\n        /* \"#utility.yul\":4475:4484   */\n      dup3\n        /* \"#utility.yul\":4471:4489   */\n      add\n        /* \"#utility.yul\":4463:4489   */\n      swap1\n      pop\n        /* \"#utility.yul\":4535:4544   */\n      dup2\n        /* \"#utility.yul\":4529:4533   */\n      dup2\n        /* \"#utility.yul\":4525:4545   */\n      sub\n        /* \"#utility.yul\":4521:4522   */\n      0x00\n        /* \"#utility.yul\":4510:4519   */\n      dup4\n        /* \"#utility.yul\":4506:4523   */\n      add\n        /* \"#utility.yul\":4499:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4694   */\n      tag_169\n        /* \"#utility.yul\":4689:4693   */\n      dup2\n        /* \"#utility.yul\":4563:4694   */\n      tag_111\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4555:4694   */\n      swap1\n      pop\n        /* \"#utility.yul\":4282:4701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4707:4887   */\n    tag_112:\n        /* \"#utility.yul\":4755:4832   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4752:4753   */\n      0x00\n        /* \"#utility.yul\":4745:4833   */\n      mstore\n        /* \"#utility.yul\":4852:4856   */\n      0x11\n        /* \"#utility.yul\":4849:4850   */\n      0x04\n        /* \"#utility.yul\":4842:4857   */\n      mstore\n        /* \"#utility.yul\":4876:4880   */\n      0x24\n        /* \"#utility.yul\":4873:4874   */\n      0x00\n        /* \"#utility.yul\":4866:4881   */\n      revert\n        /* \"#utility.yul\":4893:5087   */\n    tag_56:\n        /* \"#utility.yul\":4933:4937   */\n      0x00\n        /* \"#utility.yul\":4953:4973   */\n      tag_172\n        /* \"#utility.yul\":4971:4972   */\n      dup3\n        /* \"#utility.yul\":4953:4973   */\n      tag_94\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4948:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4987:5007   */\n      tag_173\n        /* \"#utility.yul\":5005:5006   */\n      dup4\n        /* \"#utility.yul\":4987:5007   */\n      tag_94\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4982:5007   */\n      swap3\n      pop\n        /* \"#utility.yul\":5031:5032   */\n      dup3\n        /* \"#utility.yul\":5028:5029   */\n      dup3\n        /* \"#utility.yul\":5024:5033   */\n      sub\n        /* \"#utility.yul\":5016:5033   */\n      swap1\n      pop\n        /* \"#utility.yul\":5055:5056   */\n      dup2\n        /* \"#utility.yul\":5049:5053   */\n      dup2\n        /* \"#utility.yul\":5046:5057   */\n      gt\n        /* \"#utility.yul\":5043:5080   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5060:5078   */\n      tag_175\n      tag_112\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5043:5080   */\n    tag_174:\n        /* \"#utility.yul\":4893:5087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5093:5503   */\n    tag_63:\n        /* \"#utility.yul\":5133:5140   */\n      0x00\n        /* \"#utility.yul\":5156:5176   */\n      tag_177\n        /* \"#utility.yul\":5174:5175   */\n      dup3\n        /* \"#utility.yul\":5156:5176   */\n      tag_94\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5151:5176   */\n      swap2\n      pop\n        /* \"#utility.yul\":5190:5210   */\n      tag_178\n        /* \"#utility.yul\":5208:5209   */\n      dup4\n        /* \"#utility.yul\":5190:5210   */\n      tag_94\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5185:5210   */\n      swap3\n      pop\n        /* \"#utility.yul\":5245:5246   */\n      dup3\n        /* \"#utility.yul\":5242:5243   */\n      dup3\n        /* \"#utility.yul\":5238:5247   */\n      mul\n        /* \"#utility.yul\":5267:5297   */\n      tag_179\n        /* \"#utility.yul\":5285:5296   */\n      dup2\n        /* \"#utility.yul\":5267:5297   */\n      tag_94\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5256:5297   */\n      swap2\n      pop\n        /* \"#utility.yul\":5446:5447   */\n      dup3\n        /* \"#utility.yul\":5437:5444   */\n      dup3\n        /* \"#utility.yul\":5433:5448   */\n      div\n        /* \"#utility.yul\":5430:5431   */\n      dup5\n        /* \"#utility.yul\":5427:5449   */\n      eq\n        /* \"#utility.yul\":5407:5408   */\n      dup4\n        /* \"#utility.yul\":5400:5409   */\n      iszero\n        /* \"#utility.yul\":5380:5463   */\n      or\n        /* \"#utility.yul\":5357:5496   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":5476:5494   */\n      tag_181\n      tag_112\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5357:5496   */\n    tag_180:\n        /* \"#utility.yul\":5141:5503   */\n      pop\n        /* \"#utility.yul\":5093:5503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5509:5689   */\n    tag_113:\n        /* \"#utility.yul\":5557:5634   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5554:5555   */\n      0x00\n        /* \"#utility.yul\":5547:5635   */\n      mstore\n        /* \"#utility.yul\":5654:5658   */\n      0x12\n        /* \"#utility.yul\":5651:5652   */\n      0x04\n        /* \"#utility.yul\":5644:5659   */\n      mstore\n        /* \"#utility.yul\":5678:5682   */\n      0x24\n        /* \"#utility.yul\":5675:5676   */\n      0x00\n        /* \"#utility.yul\":5668:5683   */\n      revert\n        /* \"#utility.yul\":5695:5880   */\n    tag_67:\n        /* \"#utility.yul\":5735:5736   */\n      0x00\n        /* \"#utility.yul\":5752:5772   */\n      tag_184\n        /* \"#utility.yul\":5770:5771   */\n      dup3\n        /* \"#utility.yul\":5752:5772   */\n      tag_94\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5747:5772   */\n      swap2\n      pop\n        /* \"#utility.yul\":5786:5806   */\n      tag_185\n        /* \"#utility.yul\":5804:5805   */\n      dup4\n        /* \"#utility.yul\":5786:5806   */\n      tag_94\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5781:5806   */\n      swap3\n      pop\n        /* \"#utility.yul\":5825:5826   */\n      dup3\n        /* \"#utility.yul\":5815:5850   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":5830:5848   */\n      tag_187\n      tag_113\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5815:5850   */\n    tag_186:\n        /* \"#utility.yul\":5872:5873   */\n      dup3\n        /* \"#utility.yul\":5869:5870   */\n      dup3\n        /* \"#utility.yul\":5865:5874   */\n      div\n        /* \"#utility.yul\":5860:5874   */\n      swap1\n      pop\n        /* \"#utility.yul\":5695:5880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5886:6077   */\n    tag_73:\n        /* \"#utility.yul\":5926:5929   */\n      0x00\n        /* \"#utility.yul\":5945:5965   */\n      tag_189\n        /* \"#utility.yul\":5963:5964   */\n      dup3\n        /* \"#utility.yul\":5945:5965   */\n      tag_94\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":5940:5965   */\n      swap2\n      pop\n        /* \"#utility.yul\":5979:5999   */\n      tag_190\n        /* \"#utility.yul\":5997:5998   */\n      dup4\n        /* \"#utility.yul\":5979:5999   */\n      tag_94\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5974:5999   */\n      swap3\n      pop\n        /* \"#utility.yul\":6022:6023   */\n      dup3\n        /* \"#utility.yul\":6019:6020   */\n      dup3\n        /* \"#utility.yul\":6015:6024   */\n      add\n        /* \"#utility.yul\":6008:6024   */\n      swap1\n      pop\n        /* \"#utility.yul\":6043:6046   */\n      dup1\n        /* \"#utility.yul\":6040:6041   */\n      dup3\n        /* \"#utility.yul\":6037:6047   */\n      gt\n        /* \"#utility.yul\":6034:6070   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":6050:6068   */\n      tag_192\n      tag_112\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6034:6070   */\n    tag_191:\n        /* \"#utility.yul\":5886:6077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6201   */\n    tag_114:\n        /* \"#utility.yul\":6170:6194   */\n      tag_194\n        /* \"#utility.yul\":6188:6193   */\n      dup2\n        /* \"#utility.yul\":6170:6194   */\n      tag_99\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6165:6168   */\n      dup3\n        /* \"#utility.yul\":6158:6195   */\n      mstore\n        /* \"#utility.yul\":6083:6201   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6207:6539   */\n    tag_78:\n        /* \"#utility.yul\":6328:6332   */\n      0x00\n        /* \"#utility.yul\":6366:6368   */\n      0x40\n        /* \"#utility.yul\":6355:6364   */\n      dup3\n        /* \"#utility.yul\":6351:6369   */\n      add\n        /* \"#utility.yul\":6343:6369   */\n      swap1\n      pop\n        /* \"#utility.yul\":6379:6450   */\n      tag_196\n        /* \"#utility.yul\":6447:6448   */\n      0x00\n        /* \"#utility.yul\":6436:6445   */\n      dup4\n        /* \"#utility.yul\":6432:6449   */\n      add\n        /* \"#utility.yul\":6423:6429   */\n      dup6\n        /* \"#utility.yul\":6379:6450   */\n      tag_114\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6460:6532   */\n      tag_197\n        /* \"#utility.yul\":6528:6530   */\n      0x20\n        /* \"#utility.yul\":6517:6526   */\n      dup4\n        /* \"#utility.yul\":6513:6531   */\n      add\n        /* \"#utility.yul\":6504:6510   */\n      dup5\n        /* \"#utility.yul\":6460:6532   */\n      tag_97\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6207:6539   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6545:6987   */\n    tag_83:\n        /* \"#utility.yul\":6694:6698   */\n      0x00\n        /* \"#utility.yul\":6732:6734   */\n      0x60\n        /* \"#utility.yul\":6721:6730   */\n      dup3\n        /* \"#utility.yul\":6717:6735   */\n      add\n        /* \"#utility.yul\":6709:6735   */\n      swap1\n      pop\n        /* \"#utility.yul\":6745:6816   */\n      tag_199\n        /* \"#utility.yul\":6813:6814   */\n      0x00\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6815   */\n      add\n        /* \"#utility.yul\":6789:6795   */\n      dup7\n        /* \"#utility.yul\":6745:6816   */\n      tag_114\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":6826:6898   */\n      tag_200\n        /* \"#utility.yul\":6894:6896   */\n      0x20\n        /* \"#utility.yul\":6883:6892   */\n      dup4\n        /* \"#utility.yul\":6879:6897   */\n      add\n        /* \"#utility.yul\":6870:6876   */\n      dup6\n        /* \"#utility.yul\":6826:6898   */\n      tag_114\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6908:6980   */\n      tag_201\n        /* \"#utility.yul\":6976:6978   */\n      0x40\n        /* \"#utility.yul\":6965:6974   */\n      dup4\n        /* \"#utility.yul\":6961:6979   */\n      add\n        /* \"#utility.yul\":6952:6958   */\n      dup5\n        /* \"#utility.yul\":6908:6980   */\n      tag_97\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6545:6987   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6993:7215   */\n    tag_90:\n        /* \"#utility.yul\":7086:7090   */\n      0x00\n        /* \"#utility.yul\":7124:7126   */\n      0x20\n        /* \"#utility.yul\":7113:7122   */\n      dup3\n        /* \"#utility.yul\":7109:7127   */\n      add\n        /* \"#utility.yul\":7101:7127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7137:7208   */\n      tag_203\n        /* \"#utility.yul\":7205:7206   */\n      0x00\n        /* \"#utility.yul\":7194:7203   */\n      dup4\n        /* \"#utility.yul\":7190:7207   */\n      add\n        /* \"#utility.yul\":7181:7187   */\n      dup5\n        /* \"#utility.yul\":7137:7208   */\n      tag_114\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6993:7215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204e5dc372e85e7c300e3d93efcfa58938a08c86e677759c6d1d9d7d14edaa42df64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_654": {
									"entryPoint": null,
									"id": 654,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:8",
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "922:274:8",
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:8",
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nativeSrc": "970:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nativeSrc": "970:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nativeSrc": "939:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:8",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nativeSrc": "935:32:8",
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nativeSrc": "932:119:8",
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nativeSrc": "1061:128:8",
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nativeSrc": "1076:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nativeSrc": "1147:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nativeSrc": "1115:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:8",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:8",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:8",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526101f45f55348015610014575f5ffd5b50604051610ca3380380610ca3833981810160405281019061003691906100ce565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100f9565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61009d82610074565b9050919050565b6100ad81610093565b81146100b7575f5ffd5b50565b5f815190506100c8816100a4565b92915050565b5f602082840312156100e3576100e2610070565b5b5f6100f0848285016100ba565b91505092915050565b608051610b8461011f5f395f81816102df0152818161046e01526105980152610b845ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c806364c339771161006457806364c339771461012f578063962ca4961461015f578063b6b55f251461017d578063fc0c546a146101ad578063fc7e286d146101cb57610091565b806324f45e67146100955780632e1a7d4d146100b15780633bcfc4b8146100e157806346c64873146100ff575b5f5ffd5b6100af60048036038101906100aa91906107a2565b6101fb565b005b6100cb60048036038101906100c691906107a2565b610204565b6040516100d891906107dc565b60405180910390f35b6100e961032b565b6040516100f691906107dc565b60405180910390f35b6101196004803603810190610114919061084f565b610330565b60405161012691906107dc565b60405180910390f35b6101496004803603810190610144919061084f565b610345565b60405161015691906107dc565b60405180910390f35b61016761045d565b60405161017491906107dc565b60405180910390f35b610197600480360381019061019291906107a2565b610465565b6040516101a49190610894565b60405180910390f35b6101b5610596565b6040516101c29190610908565b60405180910390f35b6101e560048036038101906101e0919061084f565b6105ba565b6040516101f291906107dc565b60405180910390f35b805f8190555050565b5f8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c9061097b565b60405180910390fd5b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102d191906109c6565b9250508190555061032333837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105cf9092919063ffffffff16565b819050919050565b5f5481565b6002602052805f5260405f205f915090505481565b5f5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610392575f9050610458565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426103dc91906109c6565b90505f6301e133809050612710816103f491906109f9565b825f5460015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461043f91906109f9565b61044991906109f9565b6104539190610a67565b925050505b919050565b5f5f54905090565b5f6104b33330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661064e909392919063ffffffff16565b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104ff9190610a97565b925050819055505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20540361058d574260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b60019050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001602052805f5260405f205f915090505481565b610649838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610602929190610ad9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d0565b505050565b6106ca848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161068393929190610b00565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d0565b50505050565b5f5f60205f8451602086015f885af1806106ef576040513d5f823e3d81fd5b3d92505f519150505f8214610708576001811415610723565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561076557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161075c9190610b35565b60405180910390fd5b50505050565b5f5ffd5b5f819050919050565b6107818161076f565b811461078b575f5ffd5b50565b5f8135905061079c81610778565b92915050565b5f602082840312156107b7576107b661076b565b5b5f6107c48482850161078e565b91505092915050565b6107d68161076f565b82525050565b5f6020820190506107ef5f8301846107cd565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61081e826107f5565b9050919050565b61082e81610814565b8114610838575f5ffd5b50565b5f8135905061084981610825565b92915050565b5f602082840312156108645761086361076b565b5b5f6108718482850161083b565b91505092915050565b5f8115159050919050565b61088e8161087a565b82525050565b5f6020820190506108a75f830184610885565b92915050565b5f819050919050565b5f6108d06108cb6108c6846107f5565b6108ad565b6107f5565b9050919050565b5f6108e1826108b6565b9050919050565b5f6108f2826108d7565b9050919050565b610902816108e8565b82525050565b5f60208201905061091b5f8301846108f9565b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f610965601483610921565b915061097082610931565b602082019050919050565b5f6020820190508181035f83015261099281610959565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109d08261076f565b91506109db8361076f565b92508282039050818111156109f3576109f2610999565b5b92915050565b5f610a038261076f565b9150610a0e8361076f565b9250828202610a1c8161076f565b91508282048414831517610a3357610a32610999565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610a718261076f565b9150610a7c8361076f565b925082610a8c57610a8b610a3a565b5b828204905092915050565b5f610aa18261076f565b9150610aac8361076f565b9250828201905080821115610ac457610ac3610999565b5b92915050565b610ad381610814565b82525050565b5f604082019050610aec5f830185610aca565b610af960208301846107cd565b9392505050565b5f606082019050610b135f830186610aca565b610b206020830185610aca565b610b2d60408301846107cd565b949350505050565b5f602082019050610b485f830184610aca565b9291505056fea26469706673582212204e5dc372e85e7c300e3d93efcfa58938a08c86e677759c6d1d9d7d14edaa42df64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH2 0x1F4 PUSH0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCA3 CODESIZE SUB DUP1 PUSH2 0xCA3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0xF9 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9D DUP3 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD DUP2 PUSH2 0x93 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0xA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3 JUMPI PUSH2 0xE2 PUSH2 0x70 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF0 DUP5 DUP3 DUP6 ADD PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xB84 PUSH2 0x11F PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x2DF ADD MSTORE DUP2 DUP2 PUSH2 0x46E ADD MSTORE PUSH2 0x598 ADD MSTORE PUSH2 0xB84 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64C33977 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x64C33977 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x962CA496 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xFC7E286D EQ PUSH2 0x1CB JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x24F45E67 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x3BCFC4B8 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x46C64873 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27C SWAP1 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x323 CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5CF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x392 JUMPI PUSH0 SWAP1 POP PUSH2 0x458 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 SWAP1 POP PUSH2 0x2710 DUP2 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST DUP3 PUSH0 SLOAD PUSH1 0x1 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x453 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4B3 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x64E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x58D JUMPI TIMESTAMP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x649 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x602 SWAP3 SWAP2 SWAP1 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6CA DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x683 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x708 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x723 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x765 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75C SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x781 DUP2 PUSH2 0x76F JUMP JUMPDEST DUP2 EQ PUSH2 0x78B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x79C DUP2 PUSH2 0x778 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7C4 DUP5 DUP3 DUP6 ADD PUSH2 0x78E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D6 DUP2 PUSH2 0x76F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EF PUSH0 DUP4 ADD DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x81E DUP3 PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82E DUP2 PUSH2 0x814 JUMP JUMPDEST DUP2 EQ PUSH2 0x838 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x849 DUP2 PUSH2 0x825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x871 DUP5 DUP3 DUP6 ADD PUSH2 0x83B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88E DUP2 PUSH2 0x87A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8D0 PUSH2 0x8CB PUSH2 0x8C6 DUP5 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8E1 DUP3 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8F2 DUP3 PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x902 DUP2 PUSH2 0x8E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91B PUSH0 DUP4 ADD DUP5 PUSH2 0x8F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x965 PUSH1 0x14 DUP4 PUSH2 0x921 JUMP JUMPDEST SWAP2 POP PUSH2 0x970 DUP3 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x992 DUP2 PUSH2 0x959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9D0 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0x9DB DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9F3 JUMPI PUSH2 0x9F2 PUSH2 0x999 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA03 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0xA0E DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA1C DUP2 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA33 JUMPI PUSH2 0xA32 PUSH2 0x999 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA71 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0xA7C DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA8C JUMPI PUSH2 0xA8B PUSH2 0xA3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAA1 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0xAAC DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x999 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD3 DUP2 PUSH2 0x814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAEC PUSH0 DUP4 ADD DUP6 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xAF9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB13 PUSH0 DUP4 ADD DUP7 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xB20 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xB2D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB48 PUSH0 DUP4 ADD DUP5 PUSH2 0xACA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E TSTORE 0xC3 PUSH19 0xE85E7C300E3D93EFCFA58938A08C86E677759C PUSH14 0x1D9D7D14EDAA42DF64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "224:1567:7:-:0;;;368:3;347:24;;511:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;564:6;549:22;;;;;;;;;;511:67;224:1567;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;224:1567:7:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_534": {
									"entryPoint": 1744,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@apy_634": {
									"entryPoint": 811,
									"id": 634,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositTime_642": {
									"entryPoint": 816,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_700": {
									"entryPoint": 1125,
									"id": 700,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deposits_638": {
									"entryPoint": 1466,
									"id": 638,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentAPY_789": {
									"entryPoint": 1117,
									"id": 789,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getYield_780": {
									"entryPoint": 837,
									"id": 780,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_239": {
									"entryPoint": 1614,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_212": {
									"entryPoint": 1487,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAPY_799": {
									"entryPoint": 507,
									"id": 799,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_631": {
									"entryPoint": 1430,
									"id": 631,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_736": {
									"entryPoint": 516,
									"id": 736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$167_to_t_address": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7218:8",
										"nodeType": "YulBlock",
										"src": "0:7218:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:32:8",
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nativeSrc": "389:16:8",
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:8",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nativeSrc": "460:79:8",
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:8",
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:8",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nativeSrc": "519:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nativeSrc": "519:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nativeSrc": "490:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nativeSrc": "480:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nativeSrc": "473:43:8",
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nativeSrc": "470:63:8",
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:8",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nativeSrc": "597:87:8",
													"nodeType": "YulBlock",
													"src": "597:87:8",
													"statements": [
														{
															"nativeSrc": "607:29:8",
															"nodeType": "YulAssignment",
															"src": "607:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:8"
																},
																"nativeSrc": "616:20:8",
																"nodeType": "YulFunctionCall",
																"src": "616:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:8"
																},
																"nativeSrc": "645:33:8",
																"nodeType": "YulFunctionCall",
																"src": "645:33:8"
															},
															"nativeSrc": "645:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:8",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:8",
														"nodeType": "YulTypedName",
														"src": "583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:8",
														"nodeType": "YulTypedName",
														"src": "591:5:8",
														"type": ""
													}
												],
												"src": "545:139:8"
											},
											{
												"body": {
													"nativeSrc": "756:263:8",
													"nodeType": "YulBlock",
													"src": "756:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:8",
																"nodeType": "YulBlock",
																"src": "802:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:8"
																			},
																			"nativeSrc": "804:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:8"
																		},
																		"nativeSrc": "804:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:8"
																		},
																		"nativeSrc": "773:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:8",
																		"nodeType": "YulLiteral",
																		"src": "798:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:8"
																},
																"nativeSrc": "769:32:8",
																"nodeType": "YulFunctionCall",
																"src": "769:32:8"
															},
															"nativeSrc": "766:119:8",
															"nodeType": "YulIf",
															"src": "766:119:8"
														},
														{
															"nativeSrc": "895:117:8",
															"nodeType": "YulBlock",
															"src": "895:117:8",
															"statements": [
																{
																	"nativeSrc": "910:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:8",
																		"nodeType": "YulLiteral",
																		"src": "924:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:8",
																			"nodeType": "YulTypedName",
																			"src": "914:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:8",
																	"nodeType": "YulAssignment",
																	"src": "939:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:8"
																				},
																				"nativeSrc": "970:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:8"
																		},
																		"nativeSrc": "949:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:8",
														"nodeType": "YulTypedName",
														"src": "726:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:8",
														"nodeType": "YulTypedName",
														"src": "737:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:8",
														"nodeType": "YulTypedName",
														"src": "749:6:8",
														"type": ""
													}
												],
												"src": "690:329:8"
											},
											{
												"body": {
													"nativeSrc": "1090:53:8",
													"nodeType": "YulBlock",
													"src": "1090:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:8"
																		},
																		"nativeSrc": "1112:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:8"
																},
																"nativeSrc": "1100:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:8"
															},
															"nativeSrc": "1100:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:8",
														"nodeType": "YulTypedName",
														"src": "1078:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:8",
														"nodeType": "YulTypedName",
														"src": "1085:3:8",
														"type": ""
													}
												],
												"src": "1025:118:8"
											},
											{
												"body": {
													"nativeSrc": "1247:124:8",
													"nodeType": "YulBlock",
													"src": "1247:124:8",
													"statements": [
														{
															"nativeSrc": "1257:26:8",
															"nodeType": "YulAssignment",
															"src": "1257:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:8"
																},
																"nativeSrc": "1265:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:8"
																		},
																		"nativeSrc": "1346:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:8"
																},
																"nativeSrc": "1293:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:8"
															},
															"nativeSrc": "1293:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:8",
														"nodeType": "YulTypedName",
														"src": "1219:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:8",
														"nodeType": "YulTypedName",
														"src": "1231:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:8",
														"nodeType": "YulTypedName",
														"src": "1242:4:8",
														"type": ""
													}
												],
												"src": "1149:222:8"
											},
											{
												"body": {
													"nativeSrc": "1422:81:8",
													"nodeType": "YulBlock",
													"src": "1422:81:8",
													"statements": [
														{
															"nativeSrc": "1432:65:8",
															"nodeType": "YulAssignment",
															"src": "1432:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:8"
																},
																"nativeSrc": "1443:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:8",
														"nodeType": "YulTypedName",
														"src": "1404:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:8",
														"nodeType": "YulTypedName",
														"src": "1414:7:8",
														"type": ""
													}
												],
												"src": "1377:126:8"
											},
											{
												"body": {
													"nativeSrc": "1554:51:8",
													"nodeType": "YulBlock",
													"src": "1554:51:8",
													"statements": [
														{
															"nativeSrc": "1564:35:8",
															"nodeType": "YulAssignment",
															"src": "1564:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:8"
																},
																"nativeSrc": "1575:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:8",
														"nodeType": "YulTypedName",
														"src": "1536:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:8",
														"nodeType": "YulTypedName",
														"src": "1546:7:8",
														"type": ""
													}
												],
												"src": "1509:96:8"
											},
											{
												"body": {
													"nativeSrc": "1654:79:8",
													"nodeType": "YulBlock",
													"src": "1654:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:8",
																"nodeType": "YulBlock",
																"src": "1711:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:8"
																			},
																			"nativeSrc": "1713:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:8"
																		},
																		"nativeSrc": "1713:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1684:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:8"
																				},
																				"nativeSrc": "1684:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:8"
																		},
																		"nativeSrc": "1674:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:8"
																},
																"nativeSrc": "1667:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:8"
															},
															"nativeSrc": "1664:63:8",
															"nodeType": "YulIf",
															"src": "1664:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1611:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:8",
														"nodeType": "YulTypedName",
														"src": "1647:5:8",
														"type": ""
													}
												],
												"src": "1611:122:8"
											},
											{
												"body": {
													"nativeSrc": "1791:87:8",
													"nodeType": "YulBlock",
													"src": "1791:87:8",
													"statements": [
														{
															"nativeSrc": "1801:29:8",
															"nodeType": "YulAssignment",
															"src": "1801:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:8"
																},
																"nativeSrc": "1810:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1839:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:8"
																},
																"nativeSrc": "1839:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:8"
															},
															"nativeSrc": "1839:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1739:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:8",
														"nodeType": "YulTypedName",
														"src": "1769:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:8",
														"nodeType": "YulTypedName",
														"src": "1777:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:8",
														"nodeType": "YulTypedName",
														"src": "1785:5:8",
														"type": ""
													}
												],
												"src": "1739:139:8"
											},
											{
												"body": {
													"nativeSrc": "1950:263:8",
													"nodeType": "YulBlock",
													"src": "1950:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:8",
																"nodeType": "YulBlock",
																"src": "1996:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:8"
																			},
																			"nativeSrc": "1998:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:8"
																		},
																		"nativeSrc": "1998:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:8"
																		},
																		"nativeSrc": "1967:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:8"
																},
																"nativeSrc": "1963:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:8"
															},
															"nativeSrc": "1960:119:8",
															"nodeType": "YulIf",
															"src": "1960:119:8"
														},
														{
															"nativeSrc": "2089:117:8",
															"nodeType": "YulBlock",
															"src": "2089:117:8",
															"statements": [
																{
																	"nativeSrc": "2104:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:8"
																				},
																				"nativeSrc": "2164:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2143:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:8"
																		},
																		"nativeSrc": "2143:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1884:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:8",
														"nodeType": "YulTypedName",
														"src": "1920:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:8",
														"nodeType": "YulTypedName",
														"src": "1931:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:8",
														"nodeType": "YulTypedName",
														"src": "1943:6:8",
														"type": ""
													}
												],
												"src": "1884:329:8"
											},
											{
												"body": {
													"nativeSrc": "2261:48:8",
													"nodeType": "YulBlock",
													"src": "2261:48:8",
													"statements": [
														{
															"nativeSrc": "2271:32:8",
															"nodeType": "YulAssignment",
															"src": "2271:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2296:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2296:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2289:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2289:6:8"
																		},
																		"nativeSrc": "2289:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2282:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:8"
																},
																"nativeSrc": "2282:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2282:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2271:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2271:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2219:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2243:5:8",
														"nodeType": "YulTypedName",
														"src": "2243:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2253:7:8",
														"nodeType": "YulTypedName",
														"src": "2253:7:8",
														"type": ""
													}
												],
												"src": "2219:90:8"
											},
											{
												"body": {
													"nativeSrc": "2374:50:8",
													"nodeType": "YulBlock",
													"src": "2374:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2391:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2391:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2411:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2396:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "2396:14:8"
																		},
																		"nativeSrc": "2396:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2384:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:8"
																},
																"nativeSrc": "2384:34:8",
																"nodeType": "YulFunctionCall",
																"src": "2384:34:8"
															},
															"nativeSrc": "2384:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "2384:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2315:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2362:5:8",
														"nodeType": "YulTypedName",
														"src": "2362:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2369:3:8",
														"nodeType": "YulTypedName",
														"src": "2369:3:8",
														"type": ""
													}
												],
												"src": "2315:109:8"
											},
											{
												"body": {
													"nativeSrc": "2522:118:8",
													"nodeType": "YulBlock",
													"src": "2522:118:8",
													"statements": [
														{
															"nativeSrc": "2532:26:8",
															"nodeType": "YulAssignment",
															"src": "2532:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2544:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2544:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2555:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2555:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2540:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2540:3:8"
																},
																"nativeSrc": "2540:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2540:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2532:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2532:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2606:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2606:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2619:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2630:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2630:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2615:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:8"
																		},
																		"nativeSrc": "2615:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2615:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2568:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "2568:37:8"
																},
																"nativeSrc": "2568:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2568:65:8"
															},
															"nativeSrc": "2568:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2568:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2430:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2494:9:8",
														"nodeType": "YulTypedName",
														"src": "2494:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2506:6:8",
														"nodeType": "YulTypedName",
														"src": "2506:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2517:4:8",
														"nodeType": "YulTypedName",
														"src": "2517:4:8",
														"type": ""
													}
												],
												"src": "2430:210:8"
											},
											{
												"body": {
													"nativeSrc": "2678:28:8",
													"nodeType": "YulBlock",
													"src": "2678:28:8",
													"statements": [
														{
															"nativeSrc": "2688:12:8",
															"nodeType": "YulAssignment",
															"src": "2688:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "2695:5:8",
																"nodeType": "YulIdentifier",
																"src": "2695:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2688:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2646:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2664:5:8",
														"nodeType": "YulTypedName",
														"src": "2664:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2674:3:8",
														"nodeType": "YulTypedName",
														"src": "2674:3:8",
														"type": ""
													}
												],
												"src": "2646:60:8"
											},
											{
												"body": {
													"nativeSrc": "2772:82:8",
													"nodeType": "YulBlock",
													"src": "2772:82:8",
													"statements": [
														{
															"nativeSrc": "2782:66:8",
															"nodeType": "YulAssignment",
															"src": "2782:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2840:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2840:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2822:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2822:17:8"
																				},
																				"nativeSrc": "2822:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2822:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2813:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "2813:8:8"
																		},
																		"nativeSrc": "2813:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2795:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2795:17:8"
																},
																"nativeSrc": "2795:53:8",
																"nodeType": "YulFunctionCall",
																"src": "2795:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2782:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2782:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2712:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2752:5:8",
														"nodeType": "YulTypedName",
														"src": "2752:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2762:9:8",
														"nodeType": "YulTypedName",
														"src": "2762:9:8",
														"type": ""
													}
												],
												"src": "2712:142:8"
											},
											{
												"body": {
													"nativeSrc": "2920:66:8",
													"nodeType": "YulBlock",
													"src": "2920:66:8",
													"statements": [
														{
															"nativeSrc": "2930:50:8",
															"nodeType": "YulAssignment",
															"src": "2930:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2974:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2974:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2943:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "2943:30:8"
																},
																"nativeSrc": "2943:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2943:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2930:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2930:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2860:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2900:5:8",
														"nodeType": "YulTypedName",
														"src": "2900:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2910:9:8",
														"nodeType": "YulTypedName",
														"src": "2910:9:8",
														"type": ""
													}
												],
												"src": "2860:126:8"
											},
											{
												"body": {
													"nativeSrc": "3066:66:8",
													"nodeType": "YulBlock",
													"src": "3066:66:8",
													"statements": [
														{
															"nativeSrc": "3076:50:8",
															"nodeType": "YulAssignment",
															"src": "3076:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3120:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3120:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3089:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3089:30:8"
																},
																"nativeSrc": "3089:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3089:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3076:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3076:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$167_to_t_address",
												"nativeSrc": "2992:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3046:5:8",
														"nodeType": "YulTypedName",
														"src": "3046:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3056:9:8",
														"nodeType": "YulTypedName",
														"src": "3056:9:8",
														"type": ""
													}
												],
												"src": "2992:140:8"
											},
											{
												"body": {
													"nativeSrc": "3217:80:8",
													"nodeType": "YulBlock",
													"src": "3217:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3234:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3234:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3284:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3284:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$167_to_t_address",
																			"nativeSrc": "3239:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "3239:44:8"
																		},
																		"nativeSrc": "3239:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3239:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:8"
																},
																"nativeSrc": "3227:64:8",
																"nodeType": "YulFunctionCall",
																"src": "3227:64:8"
															},
															"nativeSrc": "3227:64:8",
															"nodeType": "YulExpressionStatement",
															"src": "3227:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack",
												"nativeSrc": "3138:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3205:5:8",
														"nodeType": "YulTypedName",
														"src": "3205:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3212:3:8",
														"nodeType": "YulTypedName",
														"src": "3212:3:8",
														"type": ""
													}
												],
												"src": "3138:159:8"
											},
											{
												"body": {
													"nativeSrc": "3415:138:8",
													"nodeType": "YulBlock",
													"src": "3415:138:8",
													"statements": [
														{
															"nativeSrc": "3425:26:8",
															"nodeType": "YulAssignment",
															"src": "3425:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3437:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3437:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3448:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3448:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3433:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3433:3:8"
																},
																"nativeSrc": "3433:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3433:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3425:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3425:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3519:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3519:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3532:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3532:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3543:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3543:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3528:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3528:3:8"
																		},
																		"nativeSrc": "3528:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3528:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack",
																	"nativeSrc": "3461:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "3461:57:8"
																},
																"nativeSrc": "3461:85:8",
																"nodeType": "YulFunctionCall",
																"src": "3461:85:8"
															},
															"nativeSrc": "3461:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "3461:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed",
												"nativeSrc": "3303:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3387:9:8",
														"nodeType": "YulTypedName",
														"src": "3387:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3399:6:8",
														"nodeType": "YulTypedName",
														"src": "3399:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3410:4:8",
														"nodeType": "YulTypedName",
														"src": "3410:4:8",
														"type": ""
													}
												],
												"src": "3303:250:8"
											},
											{
												"body": {
													"nativeSrc": "3655:73:8",
													"nodeType": "YulBlock",
													"src": "3655:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3672:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3672:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3677:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3677:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3665:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3665:6:8"
																},
																"nativeSrc": "3665:19:8",
																"nodeType": "YulFunctionCall",
																"src": "3665:19:8"
															},
															"nativeSrc": "3665:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "3665:19:8"
														},
														{
															"nativeSrc": "3693:29:8",
															"nodeType": "YulAssignment",
															"src": "3693:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3712:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3712:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3717:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3717:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3708:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3708:3:8"
																},
																"nativeSrc": "3708:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3708:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3693:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "3693:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3559:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3627:3:8",
														"nodeType": "YulTypedName",
														"src": "3627:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3632:6:8",
														"nodeType": "YulTypedName",
														"src": "3632:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3643:11:8",
														"nodeType": "YulTypedName",
														"src": "3643:11:8",
														"type": ""
													}
												],
												"src": "3559:169:8"
											},
											{
												"body": {
													"nativeSrc": "3840:64:8",
													"nodeType": "YulBlock",
													"src": "3840:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3862:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3870:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3870:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3858:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:8"
																		},
																		"nativeSrc": "3858:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3858:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "3874:22:8",
																		"nodeType": "YulLiteral",
																		"src": "3874:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3851:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3851:6:8"
																},
																"nativeSrc": "3851:46:8",
																"nodeType": "YulFunctionCall",
																"src": "3851:46:8"
															},
															"nativeSrc": "3851:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "3851:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "3734:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3832:6:8",
														"nodeType": "YulTypedName",
														"src": "3832:6:8",
														"type": ""
													}
												],
												"src": "3734:170:8"
											},
											{
												"body": {
													"nativeSrc": "4056:220:8",
													"nodeType": "YulBlock",
													"src": "4056:220:8",
													"statements": [
														{
															"nativeSrc": "4066:74:8",
															"nodeType": "YulAssignment",
															"src": "4066:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4132:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4132:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4073:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "4073:58:8"
																},
																"nativeSrc": "4073:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4073:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4066:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4066:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4238:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4238:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "4149:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "4149:88:8"
																},
																"nativeSrc": "4149:93:8",
																"nodeType": "YulFunctionCall",
																"src": "4149:93:8"
															},
															"nativeSrc": "4149:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "4149:93:8"
														},
														{
															"nativeSrc": "4251:19:8",
															"nodeType": "YulAssignment",
															"src": "4251:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4262:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4262:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4267:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4258:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4258:3:8"
																},
																"nativeSrc": "4258:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4258:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4251:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4251:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3910:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4044:3:8",
														"nodeType": "YulTypedName",
														"src": "4044:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4052:3:8",
														"nodeType": "YulTypedName",
														"src": "4052:3:8",
														"type": ""
													}
												],
												"src": "3910:366:8"
											},
											{
												"body": {
													"nativeSrc": "4453:248:8",
													"nodeType": "YulBlock",
													"src": "4453:248:8",
													"statements": [
														{
															"nativeSrc": "4463:26:8",
															"nodeType": "YulAssignment",
															"src": "4463:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4475:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4475:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4486:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4486:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4471:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4471:3:8"
																},
																"nativeSrc": "4471:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4471:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4463:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4463:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4510:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4510:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4521:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4521:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4506:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4506:3:8"
																		},
																		"nativeSrc": "4506:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4506:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4529:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4529:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4535:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4535:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4525:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4525:3:8"
																		},
																		"nativeSrc": "4525:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4525:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4499:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4499:6:8"
																},
																"nativeSrc": "4499:47:8",
																"nodeType": "YulFunctionCall",
																"src": "4499:47:8"
															},
															"nativeSrc": "4499:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "4499:47:8"
														},
														{
															"nativeSrc": "4555:139:8",
															"nodeType": "YulAssignment",
															"src": "4555:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4689:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4689:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4563:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "4563:124:8"
																},
																"nativeSrc": "4563:131:8",
																"nodeType": "YulFunctionCall",
																"src": "4563:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4555:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4282:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4433:9:8",
														"nodeType": "YulTypedName",
														"src": "4433:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4448:4:8",
														"nodeType": "YulTypedName",
														"src": "4448:4:8",
														"type": ""
													}
												],
												"src": "4282:419:8"
											},
											{
												"body": {
													"nativeSrc": "4735:152:8",
													"nodeType": "YulBlock",
													"src": "4735:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4752:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4755:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4755:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4745:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4745:6:8"
																},
																"nativeSrc": "4745:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4745:88:8"
															},
															"nativeSrc": "4745:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4745:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4849:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4849:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4852:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4852:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4842:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:8"
																},
																"nativeSrc": "4842:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4842:15:8"
															},
															"nativeSrc": "4842:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4842:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4873:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4873:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4876:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4876:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4866:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4866:6:8"
																},
																"nativeSrc": "4866:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4866:15:8"
															},
															"nativeSrc": "4866:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4866:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4707:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4707:180:8"
											},
											{
												"body": {
													"nativeSrc": "4938:149:8",
													"nodeType": "YulBlock",
													"src": "4938:149:8",
													"statements": [
														{
															"nativeSrc": "4948:25:8",
															"nodeType": "YulAssignment",
															"src": "4948:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4971:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4971:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4953:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4953:17:8"
																},
																"nativeSrc": "4953:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4953:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4948:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "4948:1:8"
																}
															]
														},
														{
															"nativeSrc": "4982:25:8",
															"nodeType": "YulAssignment",
															"src": "4982:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5005:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5005:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4987:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4987:17:8"
																},
																"nativeSrc": "4987:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4987:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4982:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "4982:1:8"
																}
															]
														},
														{
															"nativeSrc": "5016:17:8",
															"nodeType": "YulAssignment",
															"src": "5016:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5028:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5028:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5031:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5031:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5024:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:8"
																},
																"nativeSrc": "5024:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5024:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5016:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5016:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5058:22:8",
																"nodeType": "YulBlock",
																"src": "5058:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5060:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5060:16:8"
																			},
																			"nativeSrc": "5060:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5060:18:8"
																		},
																		"nativeSrc": "5060:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5060:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5049:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5049:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5055:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5055:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5046:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5046:2:8"
																},
																"nativeSrc": "5046:11:8",
																"nodeType": "YulFunctionCall",
																"src": "5046:11:8"
															},
															"nativeSrc": "5043:37:8",
															"nodeType": "YulIf",
															"src": "5043:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4893:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4924:1:8",
														"nodeType": "YulTypedName",
														"src": "4924:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4927:1:8",
														"nodeType": "YulTypedName",
														"src": "4927:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4933:4:8",
														"nodeType": "YulTypedName",
														"src": "4933:4:8",
														"type": ""
													}
												],
												"src": "4893:194:8"
											},
											{
												"body": {
													"nativeSrc": "5141:362:8",
													"nodeType": "YulBlock",
													"src": "5141:362:8",
													"statements": [
														{
															"nativeSrc": "5151:25:8",
															"nodeType": "YulAssignment",
															"src": "5151:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5174:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5174:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5156:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5156:17:8"
																},
																"nativeSrc": "5156:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5156:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5151:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "5151:1:8"
																}
															]
														},
														{
															"nativeSrc": "5185:25:8",
															"nodeType": "YulAssignment",
															"src": "5185:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5208:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5208:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5190:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5190:17:8"
																},
																"nativeSrc": "5190:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5190:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5185:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "5185:1:8"
																}
															]
														},
														{
															"nativeSrc": "5219:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5219:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5242:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5242:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5245:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5245:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5238:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5238:3:8"
																},
																"nativeSrc": "5238:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5238:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5223:11:8",
																	"nodeType": "YulTypedName",
																	"src": "5223:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5256:41:8",
															"nodeType": "YulAssignment",
															"src": "5256:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5285:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "5285:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5267:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5267:17:8"
																},
																"nativeSrc": "5267:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5267:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5256:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5256:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5474:22:8",
																"nodeType": "YulBlock",
																"src": "5474:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5476:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5476:16:8"
																			},
																			"nativeSrc": "5476:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5476:18:8"
																		},
																		"nativeSrc": "5476:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5476:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5407:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "5407:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5400:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "5400:6:8"
																				},
																				"nativeSrc": "5400:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5400:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5430:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "5430:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5437:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "5437:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5446:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "5446:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5433:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5433:3:8"
																						},
																						"nativeSrc": "5433:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5433:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5427:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5427:2:8"
																				},
																				"nativeSrc": "5427:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5427:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5380:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5380:2:8"
																		},
																		"nativeSrc": "5380:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5380:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5360:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5360:6:8"
																},
																"nativeSrc": "5360:113:8",
																"nodeType": "YulFunctionCall",
																"src": "5360:113:8"
															},
															"nativeSrc": "5357:139:8",
															"nodeType": "YulIf",
															"src": "5357:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5093:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5124:1:8",
														"nodeType": "YulTypedName",
														"src": "5124:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5127:1:8",
														"nodeType": "YulTypedName",
														"src": "5127:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5133:7:8",
														"nodeType": "YulTypedName",
														"src": "5133:7:8",
														"type": ""
													}
												],
												"src": "5093:410:8"
											},
											{
												"body": {
													"nativeSrc": "5537:152:8",
													"nodeType": "YulBlock",
													"src": "5537:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5554:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5557:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5557:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5547:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:8"
																},
																"nativeSrc": "5547:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5547:88:8"
															},
															"nativeSrc": "5547:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5547:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5651:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5651:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5654:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5654:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5644:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5644:6:8"
																},
																"nativeSrc": "5644:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5644:15:8"
															},
															"nativeSrc": "5644:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5644:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5675:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5675:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5678:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5678:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5668:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:8"
																},
																"nativeSrc": "5668:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5668:15:8"
															},
															"nativeSrc": "5668:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5668:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5509:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5509:180:8"
											},
											{
												"body": {
													"nativeSrc": "5737:143:8",
													"nodeType": "YulBlock",
													"src": "5737:143:8",
													"statements": [
														{
															"nativeSrc": "5747:25:8",
															"nodeType": "YulAssignment",
															"src": "5747:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5770:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5770:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5752:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5752:17:8"
																},
																"nativeSrc": "5752:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5752:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5747:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "5747:1:8"
																}
															]
														},
														{
															"nativeSrc": "5781:25:8",
															"nodeType": "YulAssignment",
															"src": "5781:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5804:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5804:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5786:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5786:17:8"
																},
																"nativeSrc": "5786:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5786:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5781:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "5781:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5828:22:8",
																"nodeType": "YulBlock",
																"src": "5828:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5830:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5830:16:8"
																			},
																			"nativeSrc": "5830:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5830:18:8"
																		},
																		"nativeSrc": "5830:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5830:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5825:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5825:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5818:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:8"
																},
																"nativeSrc": "5818:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5818:9:8"
															},
															"nativeSrc": "5815:35:8",
															"nodeType": "YulIf",
															"src": "5815:35:8"
														},
														{
															"nativeSrc": "5860:14:8",
															"nodeType": "YulAssignment",
															"src": "5860:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5869:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5869:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5872:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5872:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:8"
																},
																"nativeSrc": "5865:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5865:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5860:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "5860:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5695:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5726:1:8",
														"nodeType": "YulTypedName",
														"src": "5726:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5729:1:8",
														"nodeType": "YulTypedName",
														"src": "5729:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5735:1:8",
														"nodeType": "YulTypedName",
														"src": "5735:1:8",
														"type": ""
													}
												],
												"src": "5695:185:8"
											},
											{
												"body": {
													"nativeSrc": "5930:147:8",
													"nodeType": "YulBlock",
													"src": "5930:147:8",
													"statements": [
														{
															"nativeSrc": "5940:25:8",
															"nodeType": "YulAssignment",
															"src": "5940:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5963:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5963:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5945:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5945:17:8"
																},
																"nativeSrc": "5945:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5945:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5940:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "5940:1:8"
																}
															]
														},
														{
															"nativeSrc": "5974:25:8",
															"nodeType": "YulAssignment",
															"src": "5974:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5997:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5997:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5979:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5979:17:8"
																},
																"nativeSrc": "5979:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5979:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5974:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "5974:1:8"
																}
															]
														},
														{
															"nativeSrc": "6008:16:8",
															"nodeType": "YulAssignment",
															"src": "6008:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6019:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6019:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6022:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6022:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6015:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6015:3:8"
																},
																"nativeSrc": "6015:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6015:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6008:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6008:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6048:22:8",
																"nodeType": "YulBlock",
																"src": "6048:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6050:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6050:16:8"
																			},
																			"nativeSrc": "6050:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6050:18:8"
																		},
																		"nativeSrc": "6050:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6050:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6040:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6040:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6043:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6043:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6037:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6037:2:8"
																},
																"nativeSrc": "6037:10:8",
																"nodeType": "YulFunctionCall",
																"src": "6037:10:8"
															},
															"nativeSrc": "6034:36:8",
															"nodeType": "YulIf",
															"src": "6034:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5886:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5917:1:8",
														"nodeType": "YulTypedName",
														"src": "5917:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5920:1:8",
														"nodeType": "YulTypedName",
														"src": "5920:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5926:3:8",
														"nodeType": "YulTypedName",
														"src": "5926:3:8",
														"type": ""
													}
												],
												"src": "5886:191:8"
											},
											{
												"body": {
													"nativeSrc": "6148:53:8",
													"nodeType": "YulBlock",
													"src": "6148:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6165:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6165:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6188:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6188:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6170:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6170:17:8"
																		},
																		"nativeSrc": "6170:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6170:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6158:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6158:6:8"
																},
																"nativeSrc": "6158:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6158:37:8"
															},
															"nativeSrc": "6158:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6158:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6083:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6136:5:8",
														"nodeType": "YulTypedName",
														"src": "6136:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6143:3:8",
														"nodeType": "YulTypedName",
														"src": "6143:3:8",
														"type": ""
													}
												],
												"src": "6083:118:8"
											},
											{
												"body": {
													"nativeSrc": "6333:206:8",
													"nodeType": "YulBlock",
													"src": "6333:206:8",
													"statements": [
														{
															"nativeSrc": "6343:26:8",
															"nodeType": "YulAssignment",
															"src": "6343:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6355:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6355:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6366:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6366:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6351:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:8"
																},
																"nativeSrc": "6351:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6351:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6343:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6343:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6423:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6423:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6436:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6436:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6447:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6447:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6432:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6432:3:8"
																		},
																		"nativeSrc": "6432:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6432:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6379:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6379:43:8"
																},
																"nativeSrc": "6379:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6379:71:8"
															},
															"nativeSrc": "6379:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6379:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6504:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6504:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6517:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6517:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6528:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6528:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6513:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6513:3:8"
																		},
																		"nativeSrc": "6513:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6513:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6460:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6460:43:8"
																},
																"nativeSrc": "6460:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6460:72:8"
															},
															"nativeSrc": "6460:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6460:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6207:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6297:9:8",
														"nodeType": "YulTypedName",
														"src": "6297:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6309:6:8",
														"nodeType": "YulTypedName",
														"src": "6309:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6317:6:8",
														"nodeType": "YulTypedName",
														"src": "6317:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6328:4:8",
														"nodeType": "YulTypedName",
														"src": "6328:4:8",
														"type": ""
													}
												],
												"src": "6207:332:8"
											},
											{
												"body": {
													"nativeSrc": "6699:288:8",
													"nodeType": "YulBlock",
													"src": "6699:288:8",
													"statements": [
														{
															"nativeSrc": "6709:26:8",
															"nodeType": "YulAssignment",
															"src": "6709:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6721:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6721:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6732:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6732:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6717:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6717:3:8"
																},
																"nativeSrc": "6717:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6717:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6709:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6709:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6789:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6789:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6802:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6813:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6813:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6798:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:8"
																		},
																		"nativeSrc": "6798:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6798:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6745:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6745:43:8"
																},
																"nativeSrc": "6745:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6745:71:8"
															},
															"nativeSrc": "6745:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6745:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6870:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6870:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6883:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6883:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6894:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6894:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6879:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:8"
																		},
																		"nativeSrc": "6879:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6879:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6826:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6826:43:8"
																},
																"nativeSrc": "6826:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6826:72:8"
															},
															"nativeSrc": "6826:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6826:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6952:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6952:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6965:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6965:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6976:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6976:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6961:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6961:3:8"
																		},
																		"nativeSrc": "6961:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6961:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6908:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6908:43:8"
																},
																"nativeSrc": "6908:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6908:72:8"
															},
															"nativeSrc": "6908:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6908:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6545:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6655:9:8",
														"nodeType": "YulTypedName",
														"src": "6655:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6667:6:8",
														"nodeType": "YulTypedName",
														"src": "6667:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6675:6:8",
														"nodeType": "YulTypedName",
														"src": "6675:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6683:6:8",
														"nodeType": "YulTypedName",
														"src": "6683:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6694:4:8",
														"nodeType": "YulTypedName",
														"src": "6694:4:8",
														"type": ""
													}
												],
												"src": "6545:442:8"
											},
											{
												"body": {
													"nativeSrc": "7091:124:8",
													"nodeType": "YulBlock",
													"src": "7091:124:8",
													"statements": [
														{
															"nativeSrc": "7101:26:8",
															"nodeType": "YulAssignment",
															"src": "7101:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7113:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7113:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7124:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7109:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7109:3:8"
																},
																"nativeSrc": "7109:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7109:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7101:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7101:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7181:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7181:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7194:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7194:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7205:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7205:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7190:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7190:3:8"
																		},
																		"nativeSrc": "7190:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7190:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7137:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7137:43:8"
																},
																"nativeSrc": "7137:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7137:71:8"
															},
															"nativeSrc": "7137:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7137:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6993:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7063:9:8",
														"nodeType": "YulTypedName",
														"src": "7063:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7075:6:8",
														"nodeType": "YulTypedName",
														"src": "7075:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7086:4:8",
														"nodeType": "YulTypedName",
														"src": "7086:4:8",
														"type": ""
													}
												],
												"src": "6993:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$167_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$167_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"631": [
									{
										"length": 32,
										"start": 735
									},
									{
										"length": 32,
										"start": 1134
									},
									{
										"length": 32,
										"start": 1432
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610091575f3560e01c806364c339771161006457806364c339771461012f578063962ca4961461015f578063b6b55f251461017d578063fc0c546a146101ad578063fc7e286d146101cb57610091565b806324f45e67146100955780632e1a7d4d146100b15780633bcfc4b8146100e157806346c64873146100ff575b5f5ffd5b6100af60048036038101906100aa91906107a2565b6101fb565b005b6100cb60048036038101906100c691906107a2565b610204565b6040516100d891906107dc565b60405180910390f35b6100e961032b565b6040516100f691906107dc565b60405180910390f35b6101196004803603810190610114919061084f565b610330565b60405161012691906107dc565b60405180910390f35b6101496004803603810190610144919061084f565b610345565b60405161015691906107dc565b60405180910390f35b61016761045d565b60405161017491906107dc565b60405180910390f35b610197600480360381019061019291906107a2565b610465565b6040516101a49190610894565b60405180910390f35b6101b5610596565b6040516101c29190610908565b60405180910390f35b6101e560048036038101906101e0919061084f565b6105ba565b6040516101f291906107dc565b60405180910390f35b805f8190555050565b5f8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c9061097b565b60405180910390fd5b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102d191906109c6565b9250508190555061032333837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105cf9092919063ffffffff16565b819050919050565b5f5481565b6002602052805f5260405f205f915090505481565b5f5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610392575f9050610458565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426103dc91906109c6565b90505f6301e133809050612710816103f491906109f9565b825f5460015f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461043f91906109f9565b61044991906109f9565b6104539190610a67565b925050505b919050565b5f5f54905090565b5f6104b33330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661064e909392919063ffffffff16565b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104ff9190610a97565b925050819055505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20540361058d574260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b60019050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001602052805f5260405f205f915090505481565b610649838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610602929190610ad9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d0565b505050565b6106ca848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161068393929190610b00565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d0565b50505050565b5f5f60205f8451602086015f885af1806106ef576040513d5f823e3d81fd5b3d92505f519150505f8214610708576001811415610723565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561076557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161075c9190610b35565b60405180910390fd5b50505050565b5f5ffd5b5f819050919050565b6107818161076f565b811461078b575f5ffd5b50565b5f8135905061079c81610778565b92915050565b5f602082840312156107b7576107b661076b565b5b5f6107c48482850161078e565b91505092915050565b6107d68161076f565b82525050565b5f6020820190506107ef5f8301846107cd565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61081e826107f5565b9050919050565b61082e81610814565b8114610838575f5ffd5b50565b5f8135905061084981610825565b92915050565b5f602082840312156108645761086361076b565b5b5f6108718482850161083b565b91505092915050565b5f8115159050919050565b61088e8161087a565b82525050565b5f6020820190506108a75f830184610885565b92915050565b5f819050919050565b5f6108d06108cb6108c6846107f5565b6108ad565b6107f5565b9050919050565b5f6108e1826108b6565b9050919050565b5f6108f2826108d7565b9050919050565b610902816108e8565b82525050565b5f60208201905061091b5f8301846108f9565b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f610965601483610921565b915061097082610931565b602082019050919050565b5f6020820190508181035f83015261099281610959565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109d08261076f565b91506109db8361076f565b92508282039050818111156109f3576109f2610999565b5b92915050565b5f610a038261076f565b9150610a0e8361076f565b9250828202610a1c8161076f565b91508282048414831517610a3357610a32610999565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610a718261076f565b9150610a7c8361076f565b925082610a8c57610a8b610a3a565b5b828204905092915050565b5f610aa18261076f565b9150610aac8361076f565b9250828201905080821115610ac457610ac3610999565b5b92915050565b610ad381610814565b82525050565b5f604082019050610aec5f830185610aca565b610af960208301846107cd565b9392505050565b5f606082019050610b135f830186610aca565b610b206020830185610aca565b610b2d60408301846107cd565b949350505050565b5f602082019050610b485f830184610aca565b9291505056fea26469706673582212204e5dc372e85e7c300e3d93efcfa58938a08c86e677759c6d1d9d7d14edaa42df64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64C33977 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x64C33977 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x962CA496 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xFC7E286D EQ PUSH2 0x1CB JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x24F45E67 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x3BCFC4B8 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x46C64873 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27C SWAP1 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x323 CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5CF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x392 JUMPI PUSH0 SWAP1 POP PUSH2 0x458 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 SWAP1 POP PUSH2 0x2710 DUP2 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST DUP3 PUSH0 SLOAD PUSH1 0x1 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x453 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4B3 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x64E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0xA97 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x58D JUMPI TIMESTAMP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x649 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x602 SWAP3 SWAP2 SWAP1 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6CA DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x683 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x708 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x723 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x765 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75C SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x781 DUP2 PUSH2 0x76F JUMP JUMPDEST DUP2 EQ PUSH2 0x78B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x79C DUP2 PUSH2 0x778 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7C4 DUP5 DUP3 DUP6 ADD PUSH2 0x78E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D6 DUP2 PUSH2 0x76F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EF PUSH0 DUP4 ADD DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x81E DUP3 PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82E DUP2 PUSH2 0x814 JUMP JUMPDEST DUP2 EQ PUSH2 0x838 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x849 DUP2 PUSH2 0x825 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x871 DUP5 DUP3 DUP6 ADD PUSH2 0x83B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88E DUP2 PUSH2 0x87A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8D0 PUSH2 0x8CB PUSH2 0x8C6 DUP5 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8E1 DUP3 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8F2 DUP3 PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x902 DUP2 PUSH2 0x8E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91B PUSH0 DUP4 ADD DUP5 PUSH2 0x8F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x965 PUSH1 0x14 DUP4 PUSH2 0x921 JUMP JUMPDEST SWAP2 POP PUSH2 0x970 DUP3 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x992 DUP2 PUSH2 0x959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9D0 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0x9DB DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x9F3 JUMPI PUSH2 0x9F2 PUSH2 0x999 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA03 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0xA0E DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA1C DUP2 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA33 JUMPI PUSH2 0xA32 PUSH2 0x999 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA71 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0xA7C DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA8C JUMPI PUSH2 0xA8B PUSH2 0xA3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAA1 DUP3 PUSH2 0x76F JUMP JUMPDEST SWAP2 POP PUSH2 0xAAC DUP4 PUSH2 0x76F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x999 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD3 DUP2 PUSH2 0x814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAEC PUSH0 DUP4 ADD DUP6 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xAF9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB13 PUSH0 DUP4 ADD DUP7 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xB20 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xACA JUMP JUMPDEST PUSH2 0xB2D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB48 PUSH0 DUP4 ADD DUP5 PUSH2 0xACA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E TSTORE 0xC3 PUSH19 0xE85E7C300E3D93EFCFA58938A08C86E677759C PUSH14 0x1D9D7D14EDAA42DF64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "224:1567:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1723:66;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;908:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;347:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1179:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1573:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1723:66;1778:4;1772:3;:10;;;;1723:66;:::o;908:261::-;969:7;1020:6;996:8;:20;1005:10;996:20;;;;;;;;;;;;;;;;:30;;988:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1085:6;1061:8;:20;1070:10;1061:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1101:38;1120:10;1132:6;1101:5;:18;;;;:38;;;;;:::i;:::-;1156:6;1149:13;;908:261;;;:::o;347:24::-;;;;:::o;454:46::-;;;;;;;;;;;;;;;;;:::o;1179:384::-;1243:7;1287:1;1266:11;:17;1278:4;1266:17;;;;;;;;;;;;;;;;:22;1262:36;;1297:1;1290:8;;;;1262:36;1317:19;1357:11;:17;1369:4;1357:17;;;;;;;;;;;;;;;;1339:15;:35;;;;:::i;:::-;1317:57;;1384:21;1408:8;1384:32;;1550:5;1534:13;:21;;;;:::i;:::-;1518:11;1512:3;;1495:8;:14;1504:4;1495:14;;;;;;;;;;;;;;;;:20;;;;:::i;:::-;:34;;;;:::i;:::-;1494:62;;;;:::i;:::-;1487:69;;;;1179:384;;;;:::o;1573:93::-;1630:7;1656:3;;1649:10;;1573:93;:::o;588:310::-;648:4;664:57;687:10;707:4;714:6;664:5;:22;;;;:57;;;;;;:::i;:::-;755:6;731:8;:20;740:10;731:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;802:1;775:11;:23;787:10;775:23;;;;;;;;;;;;;;;;:28;771:100;;845:15;819:11;:23;831:10;819:23;;;;;;;;;;;;;;;:41;;;;771:100;887:4;880:11;;588:310;;;:::o;312:29::-;;;:::o;405:43::-;;;;;;;;;;;;;;;;;:::o;1219:160:4:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;1618:188::-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;7686:720::-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:90::-;2253:7;2296:5;2289:13;2282:21;2271:32;;2219:90;;;:::o;2315:109::-;2396:21;2411:5;2396:21;:::i;:::-;2391:3;2384:34;2315:109;;:::o;2430:210::-;2517:4;2555:2;2544:9;2540:18;2532:26;;2568:65;2630:1;2619:9;2615:17;2606:6;2568:65;:::i;:::-;2430:210;;;;:::o;2646:60::-;2674:3;2695:5;2688:12;;2646:60;;;:::o;2712:142::-;2762:9;2795:53;2813:34;2822:24;2840:5;2822:24;:::i;:::-;2813:34;:::i;:::-;2795:53;:::i;:::-;2782:66;;2712:142;;;:::o;2860:126::-;2910:9;2943:37;2974:5;2943:37;:::i;:::-;2930:50;;2860:126;;;:::o;2992:140::-;3056:9;3089:37;3120:5;3089:37;:::i;:::-;3076:50;;2992:140;;;:::o;3138:159::-;3239:51;3284:5;3239:51;:::i;:::-;3234:3;3227:64;3138:159;;:::o;3303:250::-;3410:4;3448:2;3437:9;3433:18;3425:26;;3461:85;3543:1;3532:9;3528:17;3519:6;3461:85;:::i;:::-;3303:250;;;;:::o;3559:169::-;3643:11;3677:6;3672:3;3665:19;3717:4;3712:3;3708:14;3693:29;;3559:169;;;;:::o;3734:170::-;3874:22;3870:1;3862:6;3858:14;3851:46;3734:170;:::o;3910:366::-;4052:3;4073:67;4137:2;4132:3;4073:67;:::i;:::-;4066:74;;4149:93;4238:3;4149:93;:::i;:::-;4267:2;4262:3;4258:12;4251:19;;3910:366;;;:::o;4282:419::-;4448:4;4486:2;4475:9;4471:18;4463:26;;4535:9;4529:4;4525:20;4521:1;4510:9;4506:17;4499:47;4563:131;4689:4;4563:131;:::i;:::-;4555:139;;4282:419;;;:::o;4707:180::-;4755:77;4752:1;4745:88;4852:4;4849:1;4842:15;4876:4;4873:1;4866:15;4893:194;4933:4;4953:20;4971:1;4953:20;:::i;:::-;4948:25;;4987:20;5005:1;4987:20;:::i;:::-;4982:25;;5031:1;5028;5024:9;5016:17;;5055:1;5049:4;5046:11;5043:37;;;5060:18;;:::i;:::-;5043:37;4893:194;;;;:::o;5093:410::-;5133:7;5156:20;5174:1;5156:20;:::i;:::-;5151:25;;5190:20;5208:1;5190:20;:::i;:::-;5185:25;;5245:1;5242;5238:9;5267:30;5285:11;5267:30;:::i;:::-;5256:41;;5446:1;5437:7;5433:15;5430:1;5427:22;5407:1;5400:9;5380:83;5357:139;;5476:18;;:::i;:::-;5357:139;5141:362;5093:410;;;;:::o;5509:180::-;5557:77;5554:1;5547:88;5654:4;5651:1;5644:15;5678:4;5675:1;5668:15;5695:185;5735:1;5752:20;5770:1;5752:20;:::i;:::-;5747:25;;5786:20;5804:1;5786:20;:::i;:::-;5781:25;;5825:1;5815:35;;5830:18;;:::i;:::-;5815:35;5872:1;5869;5865:9;5860:14;;5695:185;;;;:::o;5886:191::-;5926:3;5945:20;5963:1;5945:20;:::i;:::-;5940:25;;5979:20;5997:1;5979:20;:::i;:::-;5974:25;;6022:1;6019;6015:9;6008:16;;6043:3;6040:1;6037:10;6034:36;;;6050:18;;:::i;:::-;6034:36;5886:191;;;;:::o;6083:118::-;6170:24;6188:5;6170:24;:::i;:::-;6165:3;6158:37;6083:118;;:::o;6207:332::-;6328:4;6366:2;6355:9;6351:18;6343:26;;6379:71;6447:1;6436:9;6432:17;6423:6;6379:71;:::i;:::-;6460:72;6528:2;6517:9;6513:18;6504:6;6460:72;:::i;:::-;6207:332;;;;;:::o;6545:442::-;6694:4;6732:2;6721:9;6717:18;6709:26;;6745:71;6813:1;6802:9;6798:17;6789:6;6745:71;:::i;:::-;6826:72;6894:2;6883:9;6879:18;6870:6;6826:72;:::i;:::-;6908;6976:2;6965:9;6961:18;6952:6;6908:72;:::i;:::-;6545:442;;;;;;:::o;6993:222::-;7086:4;7124:2;7113:9;7109:18;7101:26;;7137:71;7205:1;7194:9;7190:17;7181:6;7137:71;:::i;:::-;6993:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "589600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"apy()": "2469",
								"deposit(uint256)": "infinite",
								"depositTime(address)": "2869",
								"deposits(address)": "2890",
								"getCurrentAPY()": "2453",
								"getYield(address)": "infinite",
								"setAPY(uint256)": "22515",
								"token()": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 368,
									"end": 371,
									"name": "PUSH",
									"source": 7,
									"value": "1F4"
								},
								{
									"begin": 347,
									"end": 371,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 371,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 511,
									"end": 578,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 578,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 511,
									"end": 578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 511,
									"end": 578,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 511,
									"end": 578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 511,
									"end": 578,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 511,
									"end": 578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 511,
									"end": 578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 564,
									"end": 570,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 549,
									"end": 571,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 549,
									"end": 571,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 549,
									"end": 571,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 549,
									"end": 571,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 549,
									"end": 571,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 549,
									"end": 571,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 549,
									"end": 571,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 549,
									"end": 571,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 549,
									"end": 571,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 549,
									"end": 571,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 511,
									"end": 578,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "631"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1791,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e5dc372e85e7c300e3d93efcfa58938a08c86e677759c6d1d9d7d14edaa42df64736f6c634300081e0033",
									".code": [
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "64C33977"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "64C33977"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "962CA496"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "B6B55F25"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "FC7E286D"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "24F45E67"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "3BCFC4B8"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "46C64873"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1723,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1723,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 908,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 908,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 908,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 347,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 347,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 454,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 454,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 454,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1179,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1179,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1179,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1573,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1573,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 588,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 588,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 588,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 312,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 312,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 405,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 405,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 405,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1782,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 969,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1015,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1026,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1026,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 988,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 988,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1061,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1120,
											"end": 1130,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1106,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1139,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1139,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1139,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1101,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1156,
											"end": 1162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 908,
											"end": 1169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 371,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 347,
											"end": 371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1243,
											"end": 1250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1277,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1283,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1262,
											"end": 1298,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1290,
											"end": 1298,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1262,
											"end": 1298,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1262,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1368,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1373,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1374,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1339,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1416,
											"name": "PUSH",
											"source": 7,
											"value": "1E13380"
										},
										{
											"begin": 1384,
											"end": 1416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1555,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 1534,
											"end": 1547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1534,
											"end": 1555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1534,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1555,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1534,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1512,
											"end": 1515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1515,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1503,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1495,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1495,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1494,
											"end": 1556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1494,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1556,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1494,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1659,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 588,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 687,
											"end": 697,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 707,
											"end": 711,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 664,
											"end": 669,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 664,
											"end": 686,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 664,
											"end": 686,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 664,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 664,
											"end": 686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 664,
											"end": 721,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 664,
											"end": 721,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 664,
											"end": 721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 664,
											"end": 721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 664,
											"end": 721,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 664,
											"end": 721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 664,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 664,
											"end": 721,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 664,
											"end": 721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 755,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 731,
											"end": 739,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 731,
											"end": 761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 731,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 731,
											"end": 761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 731,
											"end": 761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 786,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 798,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 775,
											"end": 803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 771,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 771,
											"end": 871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 845,
											"end": 860,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 819,
											"end": 830,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 841,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 819,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 842,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 819,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 819,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 819,
											"end": 860,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 771,
											"end": 871,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 771,
											"end": 871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 887,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 880,
											"end": 891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 588,
											"end": 898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 312,
											"end": 341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 312,
											"end": 341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 405,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2282,
											"end": 2303,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2424,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2315,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2396,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2396,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2391,
											"end": 2394,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2384,
											"end": 2418,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2517,
											"end": 2521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2568,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2568,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2706,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2646,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2646,
											"end": 2706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2854,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2712,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2813,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2840,
											"end": 2845,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2822,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2813,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2847,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2813,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2795,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2848,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2795,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2943,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2980,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2943,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2930,
											"end": 2980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2930,
											"end": 2980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3132,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2992,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3120,
											"end": 3125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3089,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3126,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3089,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3132,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3297,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3138,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3284,
											"end": 3289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3239,
											"end": 3290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3239,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3227,
											"end": 3291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3553,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3303,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 3414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3450,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3437,
											"end": 3446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3433,
											"end": 3451,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3451,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3541,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3519,
											"end": 3525,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3461,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3546,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3461,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3553,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3728,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3559,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3683,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3717,
											"end": 3721,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3728,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3904,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3734,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3896,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3858,
											"end": 3872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3851,
											"end": 3897,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 3904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 4276,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 3910,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4073,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 4073,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4073,
											"end": 4140,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 4073,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 4238,
											"end": 4241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4149,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4242,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 4149,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4251,
											"end": 4270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4251,
											"end": 4270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 4276,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 4276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 4276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3910,
											"end": 4276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4701,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4282,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4452,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4488,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4463,
											"end": 4489,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4463,
											"end": 4489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4544,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4529,
											"end": 4533,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4525,
											"end": 4545,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4519,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4499,
											"end": 4546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4563,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4694,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 4563,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4555,
											"end": 4694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4282,
											"end": 4701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4887,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4707,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4832,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4833,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4852,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4842,
											"end": 4857,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4876,
											"end": 4880,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4881,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5087,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4893,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4937,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4953,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4948,
											"end": 4973,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4948,
											"end": 4973,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5005,
											"end": 5006,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4987,
											"end": 5007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5007,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 4987,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5007,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 5007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5031,
											"end": 5032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5049,
											"end": 5053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5046,
											"end": 5057,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5060,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5087,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 5087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5503,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 5093,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5133,
											"end": 5140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5174,
											"end": 5175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5156,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5176,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5156,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 5208,
											"end": 5209,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5190,
											"end": 5210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5210,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5238,
											"end": 5247,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5285,
											"end": 5296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5267,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5297,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5267,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5256,
											"end": 5297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5256,
											"end": 5297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5447,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5448,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5430,
											"end": 5431,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5427,
											"end": 5449,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5400,
											"end": 5409,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5463,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5357,
											"end": 5496,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5476,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5496,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5357,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5141,
											"end": 5503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5503,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5689,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5509,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5634,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5658,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 5651,
											"end": 5652,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5644,
											"end": 5659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5675,
											"end": 5676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5683,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5880,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5695,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5735,
											"end": 5736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5752,
											"end": 5772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 5772,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5752,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5747,
											"end": 5772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5786,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5804,
											"end": 5805,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5786,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5786,
											"end": 5806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5786,
											"end": 5806,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5786,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5781,
											"end": 5806,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5781,
											"end": 5806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5825,
											"end": 5826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5815,
											"end": 5850,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5830,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5850,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 5815,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5869,
											"end": 5870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5865,
											"end": 5874,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5874,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5880,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5880,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 6077,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 5886,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5926,
											"end": 5929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5963,
											"end": 5964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5945,
											"end": 5965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5940,
											"end": 5965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5940,
											"end": 5965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5997,
											"end": 5998,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5979,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 5999,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5979,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5974,
											"end": 5999,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5974,
											"end": 5999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6040,
											"end": 6041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6047,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6070,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6034,
											"end": 6070,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6050,
											"end": 6068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6070,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6034,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 6077,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 6077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 6077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6188,
											"end": 6193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 6170,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6194,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6170,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6083,
											"end": 6201,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6083,
											"end": 6201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6539,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6207,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6351,
											"end": 6369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6379,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6432,
											"end": 6449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6423,
											"end": 6429,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6379,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6379,
											"end": 6450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6379,
											"end": 6450,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 6379,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6528,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6510,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6460,
											"end": 6532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6532,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6460,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6539,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6539,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6207,
											"end": 6539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6987,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6545,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6734,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6721,
											"end": 6730,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6717,
											"end": 6735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6709,
											"end": 6735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6709,
											"end": 6735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6798,
											"end": 6815,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6789,
											"end": 6795,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6745,
											"end": 6816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6816,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6745,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6894,
											"end": 6896,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6876,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6826,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6898,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6826,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6976,
											"end": 6978,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6965,
											"end": 6974,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6961,
											"end": 6979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6958,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6908,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6908,
											"end": 6980,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6908,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6987,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6987,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7215,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6993,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7086,
											"end": 7090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7113,
											"end": 7122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7109,
											"end": 7127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7194,
											"end": 7203,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7187,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7137,
											"end": 7208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7137,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7215,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7215,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interfaces/IYieldStrategy.sol",
								"contracts/mocks/MockYieldStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"apy()": "3bcfc4b8",
							"deposit(uint256)": "b6b55f25",
							"depositTime(address)": "46c64873",
							"deposits(address)": "fc7e286d",
							"getCurrentAPY()": "962ca496",
							"getYield(address)": "64c33977",
							"setAPY(uint256)": "24f45e67",
							"token()": "fc0c546a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"apy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"}],\"name\":\"setAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockYieldStrategy.sol\":\"MockYieldStrategy\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interfaces/IYieldStrategy.sol\":{\"keccak256\":\"0x0265590cd1af1d52ca653c40affe7b437fe3a21f27b0c99f05c5a0282f72510d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e30cb6f996ace8ee88198708d80b87199c71c43cb2e07f4046e6aed5cf29c7f\",\"dweb:/ipfs/QmYLNebyuBWPmUdz9tmkVZKFFTUXFXufW3B9BSwdqesF38\"]},\"contracts/mocks/MockYieldStrategy.sol\":{\"keccak256\":\"0xa51ac704fe7c657d0378cf4da4181120788242d673e5b8d3e4821af00eaccecf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e5595cb1f1c319e71cebaac9461947a592d53e0508b5b242888b89a810ca7af\",\"dweb:/ipfs/QmYSvP8eHHiDEJwhaMG4YDDsMMWt9VLihiiGNGYbV7ZS6N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 634,
								"contract": "contracts/mocks/MockYieldStrategy.sol:MockYieldStrategy",
								"label": "apy",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 638,
								"contract": "contracts/mocks/MockYieldStrategy.sol:MockYieldStrategy",
								"label": "deposits",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 642,
								"contract": "contracts/mocks/MockYieldStrategy.sol:MockYieldStrategy",
								"label": "depositTime",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							588
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 588,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 588,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								588,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							588
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 589,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 588,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							576
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 576,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 576,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2548:139:4",
										"statements": [
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "2558:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 260,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 256,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$576",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$576",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 254,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 258,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2612:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 252,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2581:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "2581:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2643:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 263,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2650:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "2659:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 265,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "2674:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "2630:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2493:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2493:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2493:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2507:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2524:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:4"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:4"
									},
									"scope": 576,
									"src": "2462:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3453:370:4",
										"statements": [
											{
												"id": 311,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:4",
												"statements": [
													{
														"assignments": [
															282
														],
														"declarations": [
															{
																"constant": false,
																"id": 282,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 311,
																"src": "3487:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 291,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 287,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$576",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$576",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 285,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 289,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3545:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 283,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "3514:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "3514:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "3571:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 293,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "3590:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 302,
														"nodeType": "IfStatement",
														"src": "3567:160:4",
														"trueBody": {
															"id": 301,
															"nodeType": "Block",
															"src": "3609:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 296,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 276,
																				"src": "3667:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 297,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 282,
																				"src": "3676:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 298,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "3694:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 295,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "3634:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 300,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 304,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "3753:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 305,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3760:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 306,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "3769:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 307,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "3788:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 303,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "3740:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 310,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3386:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 272,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3386:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3386:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3400:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3417:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:4"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:4"
									},
									"scope": 576,
									"src": "3355:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "4477:303:4",
										"statements": [
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "4487:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 328,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "4530:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "4530:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 330,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "4546:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 331,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4555:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 332,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 326,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:4"
											},
											{
												"condition": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 336,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "4602:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 337,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "4609:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 335,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "4578:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "4573:201:4",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "4624:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 341,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "4658:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 344,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "4680:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "4680:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 346,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 319,
																						"src": "4696:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 347,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 348,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 342,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 340,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4638:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 353,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "4743:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 354,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "4750:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 352,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4723:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4422:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 315,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4422:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4422:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4436:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4453:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:4"
									},
									"scope": 576,
									"src": "4400:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "5227:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 373,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "5241:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 387,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5350:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 389,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "5361:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 385,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "5328:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "5328:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 400,
													"nodeType": "IfStatement",
													"src": "5323:117:4",
													"trueBody": {
														"id": 399,
														"nodeType": "Block",
														"src": "5368:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 395,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "5422:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 393,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 392,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "5389:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 398,
																"nodeType": "RevertStatement",
																"src": "5382:47:4"
															}
														]
													}
												},
												"id": 401,
												"nodeType": "IfStatement",
												"src": "5237:203:4",
												"trueBody": {
													"id": 384,
													"nodeType": "Block",
													"src": "5262:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 379,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "5289:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 380,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "5296:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 381,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "5300:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 378,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5276:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 383,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5156:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5156:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5156:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5172:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5184:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5199:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:4"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:4"
									},
									"scope": 576,
									"src": "5124:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "5965:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 418,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "5979:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 433,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6102:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 434,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "6108:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 435,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6112:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 436,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6119:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 431,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "6076:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6076:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 447,
													"nodeType": "IfStatement",
													"src": "6071:127:4",
													"trueBody": {
														"id": 446,
														"nodeType": "Block",
														"src": "6126:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 442,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 407,
																					"src": "6180:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 440,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 439,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6147:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 445,
																"nodeType": "RevertStatement",
																"src": "6140:47:4"
															}
														]
													}
												},
												"id": 448,
												"nodeType": "IfStatement",
												"src": "5975:223:4",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "6000:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 424,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "6031:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 425,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6038:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 426,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "6044:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 427,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "6048:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 423,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6014:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5843:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5843:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5843:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5867:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5889:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5909:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5932:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:4"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:4"
									},
									"scope": 576,
									"src": "5798:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "6971:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 463,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "6985:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 477,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "7093:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 478,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "7097:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 479,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "7104:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 475,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "7072:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7072:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 490,
													"nodeType": "IfStatement",
													"src": "7067:116:4",
													"trueBody": {
														"id": 489,
														"nodeType": "Block",
														"src": "7111:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 485,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "7165:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 483,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 482,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7132:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 488,
																"nodeType": "RevertStatement",
																"src": "7125:47:4"
															}
														]
													}
												},
												"id": 491,
												"nodeType": "IfStatement",
												"src": "6981:202:4",
												"trueBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "7006:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "7033:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 470,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "7040:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 471,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "7044:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "7020:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "6900:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 452,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6900:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6900:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "6916:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "6928:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "6943:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:4"
									},
									"scope": 576,
									"src": "6869:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "7756:650:4",
										"statements": [
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "7766:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 502,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:4"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "7794:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:4"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:4",
													"nodeType": "YulBlock",
													"src": "7848:396:4",
													"statements": [
														{
															"nativeSrc": "7862:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:4"
																		},
																		"nativeSrc": "7882:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:4",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:4"
																		},
																		"nativeSrc": "7899:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:4"
																		},
																		"nativeSrc": "7916:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:4"
																},
																"nativeSrc": "7877:60:4",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:4",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:4",
																"nodeType": "YulBlock",
																"src": "7998:157:4",
																"statements": [
																	{
																		"nativeSrc": "8016:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:4"
																			},
																			"nativeSrc": "8027:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:4"
																					},
																					"nativeSrc": "8078:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:4"
																			},
																			"nativeSrc": "8055:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:4"
																		},
																		"nativeSrc": "8055:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:4"
																					},
																					"nativeSrc": "8124:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:4"
																			},
																			"nativeSrc": "8112:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:4"
																		},
																		"nativeSrc": "8112:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:4"
																},
																"nativeSrc": "7982:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:4"
															},
															"nativeSrc": "7979:176:4",
															"nodeType": "YulIf",
															"src": "7979:176:4"
														},
														{
															"nativeSrc": "8168:30:4",
															"nodeType": "YulAssignment",
															"src": "8168:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:4"
																},
																"nativeSrc": "8182:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:4"
																}
															]
														},
														{
															"nativeSrc": "8211:23:4",
															"nodeType": "YulAssignment",
															"src": "8211:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:4"
																},
																"nativeSrc": "8226:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 499,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:4",
														"valueSize": 1
													},
													{
														"declaration": 499,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:4",
														"valueSize": 1
													},
													{
														"declaration": 503,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:4",
														"valueSize": 1
													},
													{
														"declaration": 506,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:4",
														"valueSize": 1
													},
													{
														"declaration": 497,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 508,
												"nodeType": "InlineAssembly",
												"src": "7823:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 509,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8258:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 520,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "8310:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 514,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "8284:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 512,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 532,
												"nodeType": "IfStatement",
												"src": "8254:146:4",
												"trueBody": {
													"id": 531,
													"nodeType": "Block",
													"src": "8328:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 527,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "8382:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 525,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 524,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8349:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 530,
															"nodeType": "RevertStatement",
															"src": "8342:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "7715:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 495,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "7715:6:4"
													},
													"referencedDeclaration": 167,
													"src": "7715:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "7729:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:4"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:4"
									},
									"scope": 576,
									"src": "7686:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "8997:391:4",
										"statements": [
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "9007:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 545,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:4"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "9029:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:4"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "9057:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:4",
													"nodeType": "YulBlock",
													"src": "9111:174:4",
													"statements": [
														{
															"nativeSrc": "9125:71:4",
															"nodeType": "YulAssignment",
															"src": "9125:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:4"
																		},
																		"nativeSrc": "9141:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:4"
																		},
																		"nativeSrc": "9158:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:4"
																		},
																		"nativeSrc": "9175:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:4"
																},
																"nativeSrc": "9136:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:4"
																}
															]
														},
														{
															"nativeSrc": "9209:30:4",
															"nodeType": "YulAssignment",
															"src": "9209:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:4"
																},
																"nativeSrc": "9223:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:4"
																}
															]
														},
														{
															"nativeSrc": "9252:23:4",
															"nodeType": "YulAssignment",
															"src": "9252:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:4"
																},
																"nativeSrc": "9267:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:4",
														"valueSize": 1
													},
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:4",
														"valueSize": 1
													},
													{
														"declaration": 549,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:4",
														"valueSize": 1
													},
													{
														"declaration": 546,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:4",
														"valueSize": 1
													},
													{
														"declaration": 538,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 554,
												"nodeType": "InlineAssembly",
												"src": "9086:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 555,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "9301:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 556,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "9313:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 567,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "9364:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 561,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 538,
																						"src": "9339:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 560,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 559,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 571,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 544,
												"id": 573,
												"nodeType": "Return",
												"src": "9294:87:4"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "8941:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 536,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8941:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8941:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "8955:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "8991:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:4"
									},
									"scope": 576,
									"src": "8908:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 577,
							"src": "698:8692:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							588
						]
					},
					"id": 589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 579,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 588,
							"linearizedBaseContracts": [
								588
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 581,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 588,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 589,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"contracts/interfaces/IYieldStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IYieldStrategy.sol",
					"exportedSymbols": {
						"IYieldStrategy": [
							617
						]
					},
					"id": 618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IYieldStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 617,
							"linearizedBaseContracts": [
								617
							],
							"name": "IYieldStrategy",
							"nameLocation": "67:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b6b55f25",
									"id": 597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "97:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "113:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "105:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:16:6"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "139:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "139:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:6:6"
									},
									"scope": 617,
									"src": "88:57:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "159:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "176:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "168:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:16:6"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "202:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "201:9:6"
									},
									"scope": 617,
									"src": "150:61:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64c33977",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getYield",
									"nameLocation": "225:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "242:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "234:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:14:6"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "271:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:9:6"
									},
									"scope": 617,
									"src": "216:64:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "962ca496",
									"id": 616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentAPY",
									"nameLocation": "294:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:2:6"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "333:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:9:6"
									},
									"scope": 617,
									"src": "285:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 618,
							"src": "57:287:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:312:6"
				},
				"id": 6
			},
			"contracts/mocks/MockYieldStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/mocks/MockYieldStrategy.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"IYieldStrategy": [
							617
						],
						"MockYieldStrategy": [
							800
						],
						"SafeERC20": [
							576
						]
					},
					"id": 801,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 619,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "contracts/interfaces/IYieldStrategy.sol",
							"file": "../interfaces/IYieldStrategy.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 801,
							"sourceUnit": 618,
							"src": "57:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 621,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 801,
							"sourceUnit": 168,
							"src": "100:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 801,
							"sourceUnit": 577,
							"src": "157:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 623,
										"name": "IYieldStrategy",
										"nameLocations": [
											"254:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 617,
										"src": "254:14:7"
									},
									"id": 624,
									"nodeType": "InheritanceSpecifier",
									"src": "254:14:7"
								}
							],
							"canonicalName": "MockYieldStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 800,
							"linearizedBaseContracts": [
								800,
								617
							],
							"name": "MockYieldStrategy",
							"nameLocation": "233:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 628,
									"libraryName": {
										"id": 625,
										"name": "SafeERC20",
										"nameLocations": [
											"281:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 576,
										"src": "281:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "275:27:7",
									"typeName": {
										"id": 627,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 626,
											"name": "IERC20",
											"nameLocations": [
												"295:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "295:6:7"
										},
										"referencedDeclaration": 167,
										"src": "295:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 631,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "336:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "312:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$167",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 630,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 629,
											"name": "IERC20",
											"nameLocations": [
												"312:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "312:6:7"
										},
										"referencedDeclaration": 167,
										"src": "312:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3bcfc4b8",
									"id": 634,
									"mutability": "mutable",
									"name": "apy",
									"nameLocation": "362:3:7",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "347:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 632,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "347:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 633,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "368:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc7e286d",
									"id": 638,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "440:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "405:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 637,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 635,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "413:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "405:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 636,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "424:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "46c64873",
									"id": 642,
									"mutability": "mutable",
									"name": "depositTime",
									"nameLocation": "489:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 800,
									"src": "454:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 641,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 639,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "462:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "454:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 640,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "473:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "539:39:7",
										"statements": [
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 647,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "549:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 649,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "564:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 648,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "557:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "557:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"src": "549:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "549:22:7"
											}
										]
									},
									"id": 654,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "531:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "523:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:16:7"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:0:7"
									},
									"scope": 800,
									"src": "511:67:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										597
									],
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "654:244:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 665,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "687:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "691:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "687:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 669,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "707:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MockYieldStrategy_$800",
																		"typeString": "contract MockYieldStrategy"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MockYieldStrategy_$800",
																		"typeString": "contract MockYieldStrategy"
																	}
																],
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "699:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "699:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "699:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "714:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "664:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "670:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "664:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "664:57:7"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 674,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "731:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 677,
														"indexExpression": {
															"expression": {
																"id": 675,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "740:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "744:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "740:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "731:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 678,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "755:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "731:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "731:30:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 681,
															"name": "depositTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "775:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 684,
														"indexExpression": {
															"expression": {
																"id": 682,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "787:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "791:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "787:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "775:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "802:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "775:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 696,
												"nodeType": "IfStatement",
												"src": "771:100:7",
												"trueBody": {
													"id": 695,
													"nodeType": "Block",
													"src": "805:66:7",
													"statements": [
														{
															"expression": {
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 687,
																		"name": "depositTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "819:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 690,
																	"indexExpression": {
																		"expression": {
																			"id": 688,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "831:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "835:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "831:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "819:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 691,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "845:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "851:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "845:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "819:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 694,
															"nodeType": "ExpressionStatement",
															"src": "819:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "887:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 661,
												"id": 698,
												"nodeType": "Return",
												"src": "880:11:7"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "597:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 658,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "630:8:7"
									},
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "613:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "605:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:16:7"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "648:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "648:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:6:7"
									},
									"scope": 800,
									"src": "588:310:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "978:191:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 709,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "996:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 712,
																"indexExpression": {
																	"expression": {
																		"id": 710,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1005:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1009:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1005:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "996:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 713,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "1020:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "996:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1028:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "988:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "988:63:7"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 718,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1061:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 721,
														"indexExpression": {
															"expression": {
																"id": 719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1070:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1074:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1070:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1061:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 722,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "1085:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1061:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "1061:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 728,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1120:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1124:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1120:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "1132:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 725,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "1101:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1107:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "1101:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1101:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "1101:38:7"
											},
											{
												"expression": {
													"id": 733,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 702,
													"src": "1156:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 707,
												"id": 734,
												"nodeType": "Return",
												"src": "1149:13:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "917:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 704,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "951:8:7"
									},
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "934:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "926:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:16:7"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "969:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:9:7"
									},
									"scope": 800,
									"src": "908:261:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										611
									],
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "1252:311:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 744,
															"name": "depositTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "1266:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 746,
														"indexExpression": {
															"id": 745,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1278:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1266:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1287:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1266:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 751,
												"nodeType": "IfStatement",
												"src": "1262:36:7",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 743,
													"id": 750,
													"nodeType": "Return",
													"src": "1290:8:7"
												}
											},
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "1325:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "1317:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1317:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 754,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1339:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1345:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1339:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 756,
															"name": "depositTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "1357:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 758,
														"indexExpression": {
															"id": 757,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1369:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1357:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1339:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1317:57:7"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "secondsInYear",
														"nameLocation": "1392:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "1384:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1384:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"hexValue": "333635",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1408:8:7",
													"subdenomination": "days",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_31536000_by_1",
														"typeString": "int_const 31536000"
													},
													"value": "365"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1384:32:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 765,
																			"name": "deposits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "1495:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 767,
																		"indexExpression": {
																			"id": 766,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "1504:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1495:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 768,
																		"name": "apy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "1512:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1495:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 770,
																	"name": "timeElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "1518:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1495:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 772,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1494:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "secondsInYear",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "1534:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "1534:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 776,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1533:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1494:62:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 778,
												"nodeType": "Return",
												"src": "1487:69:7"
											}
										]
									},
									"functionSelector": "64c33977",
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getYield",
									"nameLocation": "1188:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 740,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1225:8:7"
									},
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1205:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1197:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:14:7"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1243:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:9:7"
									},
									"scope": 800,
									"src": "1179:384:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										616
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "1639:27:7",
										"statements": [
											{
												"expression": {
													"id": 786,
													"name": "apy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 634,
													"src": "1656:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 785,
												"id": 787,
												"nodeType": "Return",
												"src": "1649:10:7"
											}
										]
									},
									"functionSelector": "962ca496",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentAPY",
									"nameLocation": "1582:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 782,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1612:8:7"
									},
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1595:2:7"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "1630:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:9:7"
									},
									"scope": 800,
									"src": "1573:93:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "1762:27:7",
										"statements": [
											{
												"expression": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 794,
														"name": "apy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "1772:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 795,
														"name": "_apy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1778:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1772:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "1772:10:7"
											}
										]
									},
									"functionSelector": "24f45e67",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAPY",
									"nameLocation": "1732:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "_apy",
												"nameLocation": "1747:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "1739:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:14:7"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:0:7"
									},
									"scope": 800,
									"src": "1723:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 801,
							"src": "224:1567:7",
							"usedErrors": [
								179
							],
							"usedEvents": []
						}
					],
					"src": "32:1759:7"
				},
				"id": 7
			}
		}
	}
}